// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysqlx_admin.proto

package com.mysql.cj.mysqlx.protobuf;

public final class MysqlxAdmin {
    private MysqlxAdmin() {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    }

    public interface CommandExecuteOrBuilder extends
    // @@protoc_insertion_point(interface_extends:Mysqlx.Admin.CommandExecute)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required string command = 1;</code>
         */
        boolean hasCommand();

        /**
         * <code>required string command = 1;</code>
         */
        java.lang.String getCommand();

        /**
         * <code>required string command = 1;</code>
         */
        com.google.protobuf.ByteString getCommandBytes();

        /**
         * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
         */
        java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument> getArgsList();

        /**
         * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
         */
        com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument getArgs(int index);

        /**
         * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
         */
        int getArgsCount();

        /**
         * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
         */
        java.util.List<? extends com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.ArgumentOrBuilder> getArgsOrBuilderList();

        /**
         * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
         */
        com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.ArgumentOrBuilder getArgsOrBuilder(int index);
    }

    /**
     * Protobuf type {@code Mysqlx.Admin.CommandExecute}
     *
     * <pre>
     * Execute an administrative command
     * :param command: the name of the command to execute
     * :param args: a list of Argument values, with the command specific list of parameters
     * Available commands and argument list are implementation specific.
     * :Returns: return is identical to that of StmtExecute
     * </pre>
     */
    public static final class CommandExecute extends com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:Mysqlx.Admin.CommandExecute)
            CommandExecuteOrBuilder {
        // Use CommandExecute.newBuilder() to construct.
        private CommandExecute(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private CommandExecute(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final CommandExecute defaultInstance;

        public static CommandExecute getDefaultInstance() {
            return defaultInstance;
        }

        public CommandExecute getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private CommandExecute(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            command_ = bs;
                            break;
                        }
                        case 18: {
                            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                                args_ = new java.util.ArrayList<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument>();
                                mutable_bitField0_ |= 0x00000002;
                            }
                            args_.add(input.readMessage(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    args_ = java.util.Collections.unmodifiableList(args_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.internal_static_Mysqlx_Admin_CommandExecute_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.internal_static_Mysqlx_Admin_CommandExecute_fieldAccessorTable.ensureFieldAccessorsInitialized(
                    com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.class, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Builder.class);
        }

        public static com.google.protobuf.Parser<CommandExecute> PARSER = new com.google.protobuf.AbstractParser<CommandExecute>() {
            public CommandExecute parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new CommandExecute(input, extensionRegistry);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<CommandExecute> getParserForType() {
            return PARSER;
        }

        public interface ArgumentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Mysqlx.Admin.CommandExecute.Argument)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>required .Mysqlx.Admin.CommandExecute.Argument.Type type = 1;</code>
             */
            boolean hasType();

            /**
             * <code>required .Mysqlx.Admin.CommandExecute.Argument.Type type = 1;</code>
             */
            com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type getType();

            /**
             * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
             */
            boolean hasScalar();

            /**
             * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
             */
            com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar getScalar();

            /**
             * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
             */
            com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ScalarOrBuilder getScalarOrBuilder();

            /**
             * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
             */
            java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem> getDocumentPathList();

            /**
             * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
             */
            com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem getDocumentPath(int index);

            /**
             * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
             */
            int getDocumentPathCount();

            /**
             * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
             */
            java.util.List<? extends com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItemOrBuilder> getDocumentPathOrBuilderList();

            /**
             * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
             */
            com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItemOrBuilder getDocumentPathOrBuilder(int index);

            /**
             * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
             */
            boolean hasArray();

            /**
             * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
             */
            com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array getArray();

            /**
             * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
             */
            com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ArrayOrBuilder getArrayOrBuilder();

            /**
             * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
             */
            boolean hasObject();

            /**
             * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
             */
            com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object getObject();

            /**
             * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
             */
            com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ObjectOrBuilder getObjectOrBuilder();
        }

        /**
         * Protobuf type {@code Mysqlx.Admin.CommandExecute.Argument}
         */
        public static final class Argument extends com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:Mysqlx.Admin.CommandExecute.Argument)
                ArgumentOrBuilder {
            // Use Argument.newBuilder() to construct.
            private Argument(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
                super(builder);
                this.unknownFields = builder.getUnknownFields();
            }

            private Argument(boolean noInit) {
                this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }

            private static final Argument defaultInstance;

            public static Argument getDefaultInstance() {
                return defaultInstance;
            }

            public Argument getDefaultInstanceForType() {
                return defaultInstance;
            }

            private final com.google.protobuf.UnknownFieldSet unknownFields;

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private Argument(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                initFields();
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                            case 0:
                                done = true;
                                break;
                            default: {
                                if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                    done = true;
                                }
                                break;
                            }
                            case 8: {
                                int rawValue = input.readEnum();
                                com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type value = com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type
                                        .valueOf(rawValue);
                                if (value == null) {
                                    unknownFields.mergeVarintField(1, rawValue);
                                } else {
                                    bitField0_ |= 0x00000001;
                                    type_ = value;
                                }
                                break;
                            }
                            case 18: {
                                com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                                    subBuilder = scalar_.toBuilder();
                                }
                                scalar_ = input.readMessage(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.PARSER, extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(scalar_);
                                    scalar_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000002;
                                break;
                            }
                            case 26: {
                                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                    documentPath_ = new java.util.ArrayList<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem>();
                                    mutable_bitField0_ |= 0x00000004;
                                }
                                documentPath_.add(input.readMessage(com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.PARSER, extensionRegistry));
                                break;
                            }
                            case 34: {
                                com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                                    subBuilder = array_.toBuilder();
                                }
                                array_ = input.readMessage(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.PARSER, extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(array_);
                                    array_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000004;
                                break;
                            }
                            case 42: {
                                com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.Builder subBuilder = null;
                                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                                    subBuilder = object_.toBuilder();
                                }
                                object_ = input.readMessage(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.PARSER, extensionRegistry);
                                if (subBuilder != null) {
                                    subBuilder.mergeFrom(object_);
                                    object_ = subBuilder.buildPartial();
                                }
                                bitField0_ |= 0x00000008;
                                break;
                            }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                        documentPath_ = java.util.Collections.unmodifiableList(documentPath_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.internal_static_Mysqlx_Admin_CommandExecute_Argument_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.internal_static_Mysqlx_Admin_CommandExecute_Argument_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.class,
                                com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder.class);
            }

            public static com.google.protobuf.Parser<Argument> PARSER = new com.google.protobuf.AbstractParser<Argument>() {
                public Argument parsePartialFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws com.google.protobuf.InvalidProtocolBufferException {
                    return new Argument(input, extensionRegistry);
                }
            };

            @java.lang.Override
            public com.google.protobuf.Parser<Argument> getParserForType() {
                return PARSER;
            }

            /**
             * Protobuf enum {@code Mysqlx.Admin.CommandExecute.Argument.Type}
             */
            public enum Type implements com.google.protobuf.ProtocolMessageEnum {
                /**
                 * <code>SCALAR = 1;</code>
                 */
                SCALAR(0, 1),
                /**
                 * <code>DOCUMENT_PATH = 2;</code>
                 */
                DOCUMENT_PATH(1, 2),
                /**
                 * <code>ARRAY = 3;</code>
                 */
                ARRAY(2, 3),
                /**
                 * <code>OBJECT = 4;</code>
                 */
                OBJECT(3, 4), ;

                /**
                 * <code>SCALAR = 1;</code>
                 */
                public static final int SCALAR_VALUE = 1;
                /**
                 * <code>DOCUMENT_PATH = 2;</code>
                 */
                public static final int DOCUMENT_PATH_VALUE = 2;
                /**
                 * <code>ARRAY = 3;</code>
                 */
                public static final int ARRAY_VALUE = 3;
                /**
                 * <code>OBJECT = 4;</code>
                 */
                public static final int OBJECT_VALUE = 4;

                public final int getNumber() {
                    return value;
                }

                public static Type valueOf(int value) {
                    switch (value) {
                        case 1:
                            return SCALAR;
                        case 2:
                            return DOCUMENT_PATH;
                        case 3:
                            return ARRAY;
                        case 4:
                            return OBJECT;
                        default:
                            return null;
                    }
                }

                public static com.google.protobuf.Internal.EnumLiteMap<Type> internalGetValueMap() {
                    return internalValueMap;
                }

                private static com.google.protobuf.Internal.EnumLiteMap<Type> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                    public Type findValueByNumber(int number) {
                        return Type.valueOf(number);
                    }
                };

                public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
                    return getDescriptor().getValues().get(index);
                }

                public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
                    return getDescriptor();
                }

                public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
                    return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.getDescriptor().getEnumTypes().get(0);
                }

                private static final Type[] VALUES = values();

                public static Type valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                    if (desc.getType() != getDescriptor()) {
                        throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
                    }
                    return VALUES[desc.getIndex()];
                }

                private final int index;
                private final int value;

                private Type(int index, int value) {
                    this.index = index;
                    this.value = value;
                }

                // @@protoc_insertion_point(enum_scope:Mysqlx.Admin.CommandExecute.Argument.Type)
            }

            private int bitField0_;
            public static final int TYPE_FIELD_NUMBER = 1;
            private com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type type_;

            /**
             * <code>required .Mysqlx.Admin.CommandExecute.Argument.Type type = 1;</code>
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required .Mysqlx.Admin.CommandExecute.Argument.Type type = 1;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type getType() {
                return type_;
            }

            public static final int SCALAR_FIELD_NUMBER = 2;
            private com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar scalar_;

            /**
             * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
             */
            public boolean hasScalar() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar getScalar() {
                return scalar_;
            }

            /**
             * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ScalarOrBuilder getScalarOrBuilder() {
                return scalar_;
            }

            public static final int DOCUMENT_PATH_FIELD_NUMBER = 3;
            private java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem> documentPath_;

            /**
             * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
             */
            public java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem> getDocumentPathList() {
                return documentPath_;
            }

            /**
             * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
             */
            public java.util.List<? extends com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItemOrBuilder> getDocumentPathOrBuilderList() {
                return documentPath_;
            }

            /**
             * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
             */
            public int getDocumentPathCount() {
                return documentPath_.size();
            }

            /**
             * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem getDocumentPath(int index) {
                return documentPath_.get(index);
            }

            /**
             * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItemOrBuilder getDocumentPathOrBuilder(int index) {
                return documentPath_.get(index);
            }

            public static final int ARRAY_FIELD_NUMBER = 4;
            private com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array array_;

            /**
             * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
             */
            public boolean hasArray() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array getArray() {
                return array_;
            }

            /**
             * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ArrayOrBuilder getArrayOrBuilder() {
                return array_;
            }

            public static final int OBJECT_FIELD_NUMBER = 5;
            private com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object object_;

            /**
             * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
             */
            public boolean hasObject() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object getObject() {
                return object_;
            }

            /**
             * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ObjectOrBuilder getObjectOrBuilder() {
                return object_;
            }

            private void initFields() {
                type_ = com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type.SCALAR;
                scalar_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.getDefaultInstance();
                documentPath_ = java.util.Collections.emptyList();
                array_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.getDefaultInstance();
                object_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.getDefaultInstance();
            }

            private byte memoizedIsInitialized = -1;

            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;

                if (!hasType()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
                if (hasScalar()) {
                    if (!getScalar().isInitialized()) {
                        memoizedIsInitialized = 0;
                        return false;
                    }
                }
                for (int i = 0; i < getDocumentPathCount(); i++) {
                    if (!getDocumentPath(i).isInitialized()) {
                        memoizedIsInitialized = 0;
                        return false;
                    }
                }
                if (hasArray()) {
                    if (!getArray().isInitialized()) {
                        memoizedIsInitialized = 0;
                        return false;
                    }
                }
                if (hasObject()) {
                    if (!getObject().isInitialized()) {
                        memoizedIsInitialized = 0;
                        return false;
                    }
                }
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
                getSerializedSize();
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    output.writeEnum(1, type_.getNumber());
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    output.writeMessage(2, scalar_);
                }
                for (int i = 0; i < documentPath_.size(); i++) {
                    output.writeMessage(3, documentPath_.get(i));
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    output.writeMessage(4, array_);
                }
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    output.writeMessage(5, object_);
                }
                getUnknownFields().writeTo(output);
            }

            private int memoizedSerializedSize = -1;

            public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1)
                    return size;

                size = 0;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    size += com.google.protobuf.CodedOutputStream.computeEnumSize(1, type_.getNumber());
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, scalar_);
                }
                for (int i = 0; i < documentPath_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, documentPath_.get(i));
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, array_);
                }
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, object_);
                }
                size += getUnknownFields().getSerializedSize();
                memoizedSerializedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;

            @java.lang.Override
            protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
                return super.writeReplace();
            }

            public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parseFrom(com.google.protobuf.ByteString data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parseFrom(com.google.protobuf.ByteString data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parseFrom(byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parseFrom(java.io.InputStream input) throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parseFrom(java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parseDelimitedFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input);
            }

            public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parseDelimitedFrom(java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parseFrom(com.google.protobuf.CodedInputStream input)
                    throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parseFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return Builder.create();
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument prototype) {
                return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return newBuilder(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code Mysqlx.Admin.CommandExecute.Argument}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:Mysqlx.Admin.CommandExecute.Argument)
                    com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.ArgumentOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                    return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.internal_static_Mysqlx_Admin_CommandExecute_Argument_descriptor;
                }

                protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                    return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.internal_static_Mysqlx_Admin_CommandExecute_Argument_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.class,
                                    com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder.class);
                }

                // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                        getScalarFieldBuilder();
                        getDocumentPathFieldBuilder();
                        getArrayFieldBuilder();
                        getObjectFieldBuilder();
                    }
                }

                private static Builder create() {
                    return new Builder();
                }

                public Builder clear() {
                    super.clear();
                    type_ = com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type.SCALAR;
                    bitField0_ = (bitField0_ & ~0x00000001);
                    if (scalarBuilder_ == null) {
                        scalar_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.getDefaultInstance();
                    } else {
                        scalarBuilder_.clear();
                    }
                    bitField0_ = (bitField0_ & ~0x00000002);
                    if (documentPathBuilder_ == null) {
                        documentPath_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        documentPathBuilder_.clear();
                    }
                    if (arrayBuilder_ == null) {
                        array_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.getDefaultInstance();
                    } else {
                        arrayBuilder_.clear();
                    }
                    bitField0_ = (bitField0_ & ~0x00000008);
                    if (objectBuilder_ == null) {
                        object_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.getDefaultInstance();
                    } else {
                        objectBuilder_.clear();
                    }
                    bitField0_ = (bitField0_ & ~0x00000010);
                    return this;
                }

                public Builder clone() {
                    return create().mergeFrom(buildPartial());
                }

                public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                    return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.internal_static_Mysqlx_Admin_CommandExecute_Argument_descriptor;
                }

                public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument getDefaultInstanceForType() {
                    return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.getDefaultInstance();
                }

                public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument build() {
                    com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument buildPartial() {
                    com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument result = new com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument(
                            this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                        to_bitField0_ |= 0x00000001;
                    }
                    result.type_ = type_;
                    if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                        to_bitField0_ |= 0x00000002;
                    }
                    if (scalarBuilder_ == null) {
                        result.scalar_ = scalar_;
                    } else {
                        result.scalar_ = scalarBuilder_.build();
                    }
                    if (documentPathBuilder_ == null) {
                        if (((bitField0_ & 0x00000004) == 0x00000004)) {
                            documentPath_ = java.util.Collections.unmodifiableList(documentPath_);
                            bitField0_ = (bitField0_ & ~0x00000004);
                        }
                        result.documentPath_ = documentPath_;
                    } else {
                        result.documentPath_ = documentPathBuilder_.build();
                    }
                    if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                        to_bitField0_ |= 0x00000004;
                    }
                    if (arrayBuilder_ == null) {
                        result.array_ = array_;
                    } else {
                        result.array_ = arrayBuilder_.build();
                    }
                    if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                        to_bitField0_ |= 0x00000008;
                    }
                    if (objectBuilder_ == null) {
                        result.object_ = object_;
                    } else {
                        result.object_ = objectBuilder_.build();
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument) {
                        return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument other) {
                    if (other == com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.getDefaultInstance())
                        return this;
                    if (other.hasType()) {
                        setType(other.getType());
                    }
                    if (other.hasScalar()) {
                        mergeScalar(other.getScalar());
                    }
                    if (documentPathBuilder_ == null) {
                        if (!other.documentPath_.isEmpty()) {
                            if (documentPath_.isEmpty()) {
                                documentPath_ = other.documentPath_;
                                bitField0_ = (bitField0_ & ~0x00000004);
                            } else {
                                ensureDocumentPathIsMutable();
                                documentPath_.addAll(other.documentPath_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.documentPath_.isEmpty()) {
                            if (documentPathBuilder_.isEmpty()) {
                                documentPathBuilder_.dispose();
                                documentPathBuilder_ = null;
                                documentPath_ = other.documentPath_;
                                bitField0_ = (bitField0_ & ~0x00000004);
                                documentPathBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getDocumentPathFieldBuilder() : null;
                            } else {
                                documentPathBuilder_.addAllMessages(other.documentPath_);
                            }
                        }
                    }
                    if (other.hasArray()) {
                        mergeArray(other.getArray());
                    }
                    if (other.hasObject()) {
                        mergeObject(other.getObject());
                    }
                    this.mergeUnknownFields(other.getUnknownFields());
                    return this;
                }

                public final boolean isInitialized() {
                    if (!hasType()) {

                        return false;
                    }
                    if (hasScalar()) {
                        if (!getScalar().isInitialized()) {

                            return false;
                        }
                    }
                    for (int i = 0; i < getDocumentPathCount(); i++) {
                        if (!getDocumentPath(i).isInitialized()) {

                            return false;
                        }
                    }
                    if (hasArray()) {
                        if (!getArray().isInitialized()) {

                            return false;
                        }
                    }
                    if (hasObject()) {
                        if (!getObject().isInitialized()) {

                            return false;
                        }
                    }
                    return true;
                }

                public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                        throws java.io.IOException {
                    com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument) e.getUnfinishedMessage();
                        throw e;
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int bitField0_;

                private com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type type_ = com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type.SCALAR;

                /**
                 * <code>required .Mysqlx.Admin.CommandExecute.Argument.Type type = 1;</code>
                 */
                public boolean hasType() {
                    return ((bitField0_ & 0x00000001) == 0x00000001);
                }

                /**
                 * <code>required .Mysqlx.Admin.CommandExecute.Argument.Type type = 1;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type getType() {
                    return type_;
                }

                /**
                 * <code>required .Mysqlx.Admin.CommandExecute.Argument.Type type = 1;</code>
                 */
                public Builder setType(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000001;
                    type_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>required .Mysqlx.Admin.CommandExecute.Argument.Type type = 1;</code>
                 */
                public Builder clearType() {
                    bitField0_ = (bitField0_ & ~0x00000001);
                    type_ = com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Type.SCALAR;
                    onChanged();
                    return this;
                }

                private com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar scalar_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.getDefaultInstance();
                private com.google.protobuf.SingleFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ScalarOrBuilder> scalarBuilder_;

                /**
                 * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
                 */
                public boolean hasScalar() {
                    return ((bitField0_ & 0x00000002) == 0x00000002);
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar getScalar() {
                    if (scalarBuilder_ == null) {
                        return scalar_;
                    } else {
                        return scalarBuilder_.getMessage();
                    }
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
                 */
                public Builder setScalar(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar value) {
                    if (scalarBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        scalar_ = value;
                        onChanged();
                    } else {
                        scalarBuilder_.setMessage(value);
                    }
                    bitField0_ |= 0x00000002;
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
                 */
                public Builder setScalar(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.Builder builderForValue) {
                    if (scalarBuilder_ == null) {
                        scalar_ = builderForValue.build();
                        onChanged();
                    } else {
                        scalarBuilder_.setMessage(builderForValue.build());
                    }
                    bitField0_ |= 0x00000002;
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
                 */
                public Builder mergeScalar(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar value) {
                    if (scalarBuilder_ == null) {
                        if (((bitField0_ & 0x00000002) == 0x00000002) && scalar_ != com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.getDefaultInstance()) {
                            scalar_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.newBuilder(scalar_).mergeFrom(value).buildPartial();
                        } else {
                            scalar_ = value;
                        }
                        onChanged();
                    } else {
                        scalarBuilder_.mergeFrom(value);
                    }
                    bitField0_ |= 0x00000002;
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
                 */
                public Builder clearScalar() {
                    if (scalarBuilder_ == null) {
                        scalar_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.getDefaultInstance();
                        onChanged();
                    } else {
                        scalarBuilder_.clear();
                    }
                    bitField0_ = (bitField0_ & ~0x00000002);
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.Builder getScalarBuilder() {
                    bitField0_ |= 0x00000002;
                    onChanged();
                    return getScalarFieldBuilder().getBuilder();
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ScalarOrBuilder getScalarOrBuilder() {
                    if (scalarBuilder_ != null) {
                        return scalarBuilder_.getMessageOrBuilder();
                    } else {
                        return scalar_;
                    }
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Scalar scalar = 2;</code>
                 */
                private com.google.protobuf.SingleFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ScalarOrBuilder> getScalarFieldBuilder() {
                    if (scalarBuilder_ == null) {
                        scalarBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Scalar.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ScalarOrBuilder>(
                                getScalar(), getParentForChildren(), isClean());
                        scalar_ = null;
                    }
                    return scalarBuilder_;
                }

                private java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem> documentPath_ = java.util.Collections.emptyList();

                private void ensureDocumentPathIsMutable() {
                    if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                        documentPath_ = new java.util.ArrayList<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem>(documentPath_);
                        bitField0_ |= 0x00000004;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItemOrBuilder> documentPathBuilder_;

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem> getDocumentPathList() {
                    if (documentPathBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(documentPath_);
                    } else {
                        return documentPathBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public int getDocumentPathCount() {
                    if (documentPathBuilder_ == null) {
                        return documentPath_.size();
                    } else {
                        return documentPathBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem getDocumentPath(int index) {
                    if (documentPathBuilder_ == null) {
                        return documentPath_.get(index);
                    } else {
                        return documentPathBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public Builder setDocumentPath(int index, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem value) {
                    if (documentPathBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureDocumentPathIsMutable();
                        documentPath_.set(index, value);
                        onChanged();
                    } else {
                        documentPathBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public Builder setDocumentPath(int index, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.Builder builderForValue) {
                    if (documentPathBuilder_ == null) {
                        ensureDocumentPathIsMutable();
                        documentPath_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        documentPathBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public Builder addDocumentPath(com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem value) {
                    if (documentPathBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureDocumentPathIsMutable();
                        documentPath_.add(value);
                        onChanged();
                    } else {
                        documentPathBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public Builder addDocumentPath(int index, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem value) {
                    if (documentPathBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureDocumentPathIsMutable();
                        documentPath_.add(index, value);
                        onChanged();
                    } else {
                        documentPathBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public Builder addDocumentPath(com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.Builder builderForValue) {
                    if (documentPathBuilder_ == null) {
                        ensureDocumentPathIsMutable();
                        documentPath_.add(builderForValue.build());
                        onChanged();
                    } else {
                        documentPathBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public Builder addDocumentPath(int index, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.Builder builderForValue) {
                    if (documentPathBuilder_ == null) {
                        ensureDocumentPathIsMutable();
                        documentPath_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        documentPathBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public Builder addAllDocumentPath(java.lang.Iterable<? extends com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem> values) {
                    if (documentPathBuilder_ == null) {
                        ensureDocumentPathIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, documentPath_);
                        onChanged();
                    } else {
                        documentPathBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public Builder clearDocumentPath() {
                    if (documentPathBuilder_ == null) {
                        documentPath_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000004);
                        onChanged();
                    } else {
                        documentPathBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public Builder removeDocumentPath(int index) {
                    if (documentPathBuilder_ == null) {
                        ensureDocumentPathIsMutable();
                        documentPath_.remove(index);
                        onChanged();
                    } else {
                        documentPathBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.Builder getDocumentPathBuilder(int index) {
                    return getDocumentPathFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItemOrBuilder getDocumentPathOrBuilder(int index) {
                    if (documentPathBuilder_ == null) {
                        return documentPath_.get(index);
                    } else {
                        return documentPathBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public java.util.List<? extends com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItemOrBuilder> getDocumentPathOrBuilderList() {
                    if (documentPathBuilder_ != null) {
                        return documentPathBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(documentPath_);
                    }
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.Builder addDocumentPathBuilder() {
                    return getDocumentPathFieldBuilder().addBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.getDefaultInstance());
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.Builder addDocumentPathBuilder(int index) {
                    return getDocumentPathFieldBuilder().addBuilder(index, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.getDefaultInstance());
                }

                /**
                 * <code>repeated .Mysqlx.Expr.DocumentPathItem document_path = 3;</code>
                 */
                public java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.Builder> getDocumentPathBuilderList() {
                    return getDocumentPathFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItemOrBuilder> getDocumentPathFieldBuilder() {
                    if (documentPathBuilder_ == null) {
                        documentPathBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItem.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxExpr.DocumentPathItemOrBuilder>(
                                documentPath_, ((bitField0_ & 0x00000004) == 0x00000004), getParentForChildren(), isClean());
                        documentPath_ = null;
                    }
                    return documentPathBuilder_;
                }

                private com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array array_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.getDefaultInstance();
                private com.google.protobuf.SingleFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ArrayOrBuilder> arrayBuilder_;

                /**
                 * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
                 */
                public boolean hasArray() {
                    return ((bitField0_ & 0x00000008) == 0x00000008);
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array getArray() {
                    if (arrayBuilder_ == null) {
                        return array_;
                    } else {
                        return arrayBuilder_.getMessage();
                    }
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
                 */
                public Builder setArray(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array value) {
                    if (arrayBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        array_ = value;
                        onChanged();
                    } else {
                        arrayBuilder_.setMessage(value);
                    }
                    bitField0_ |= 0x00000008;
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
                 */
                public Builder setArray(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.Builder builderForValue) {
                    if (arrayBuilder_ == null) {
                        array_ = builderForValue.build();
                        onChanged();
                    } else {
                        arrayBuilder_.setMessage(builderForValue.build());
                    }
                    bitField0_ |= 0x00000008;
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
                 */
                public Builder mergeArray(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array value) {
                    if (arrayBuilder_ == null) {
                        if (((bitField0_ & 0x00000008) == 0x00000008) && array_ != com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.getDefaultInstance()) {
                            array_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.newBuilder(array_).mergeFrom(value).buildPartial();
                        } else {
                            array_ = value;
                        }
                        onChanged();
                    } else {
                        arrayBuilder_.mergeFrom(value);
                    }
                    bitField0_ |= 0x00000008;
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
                 */
                public Builder clearArray() {
                    if (arrayBuilder_ == null) {
                        array_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.getDefaultInstance();
                        onChanged();
                    } else {
                        arrayBuilder_.clear();
                    }
                    bitField0_ = (bitField0_ & ~0x00000008);
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.Builder getArrayBuilder() {
                    bitField0_ |= 0x00000008;
                    onChanged();
                    return getArrayFieldBuilder().getBuilder();
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ArrayOrBuilder getArrayOrBuilder() {
                    if (arrayBuilder_ != null) {
                        return arrayBuilder_.getMessageOrBuilder();
                    } else {
                        return array_;
                    }
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Array array = 4;</code>
                 */
                private com.google.protobuf.SingleFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ArrayOrBuilder> getArrayFieldBuilder() {
                    if (arrayBuilder_ == null) {
                        arrayBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Array.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ArrayOrBuilder>(
                                getArray(), getParentForChildren(), isClean());
                        array_ = null;
                    }
                    return arrayBuilder_;
                }

                private com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object object_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.getDefaultInstance();
                private com.google.protobuf.SingleFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ObjectOrBuilder> objectBuilder_;

                /**
                 * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
                 */
                public boolean hasObject() {
                    return ((bitField0_ & 0x00000010) == 0x00000010);
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object getObject() {
                    if (objectBuilder_ == null) {
                        return object_;
                    } else {
                        return objectBuilder_.getMessage();
                    }
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
                 */
                public Builder setObject(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object value) {
                    if (objectBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        object_ = value;
                        onChanged();
                    } else {
                        objectBuilder_.setMessage(value);
                    }
                    bitField0_ |= 0x00000010;
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
                 */
                public Builder setObject(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.Builder builderForValue) {
                    if (objectBuilder_ == null) {
                        object_ = builderForValue.build();
                        onChanged();
                    } else {
                        objectBuilder_.setMessage(builderForValue.build());
                    }
                    bitField0_ |= 0x00000010;
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
                 */
                public Builder mergeObject(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object value) {
                    if (objectBuilder_ == null) {
                        if (((bitField0_ & 0x00000010) == 0x00000010) && object_ != com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.getDefaultInstance()) {
                            object_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.newBuilder(object_).mergeFrom(value).buildPartial();
                        } else {
                            object_ = value;
                        }
                        onChanged();
                    } else {
                        objectBuilder_.mergeFrom(value);
                    }
                    bitField0_ |= 0x00000010;
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
                 */
                public Builder clearObject() {
                    if (objectBuilder_ == null) {
                        object_ = com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.getDefaultInstance();
                        onChanged();
                    } else {
                        objectBuilder_.clear();
                    }
                    bitField0_ = (bitField0_ & ~0x00000010);
                    return this;
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.Builder getObjectBuilder() {
                    bitField0_ |= 0x00000010;
                    onChanged();
                    return getObjectFieldBuilder().getBuilder();
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
                 */
                public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ObjectOrBuilder getObjectOrBuilder() {
                    if (objectBuilder_ != null) {
                        return objectBuilder_.getMessageOrBuilder();
                    } else {
                        return object_;
                    }
                }

                /**
                 * <code>optional .Mysqlx.Datatypes.Object object = 5;</code>
                 */
                private com.google.protobuf.SingleFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ObjectOrBuilder> getObjectFieldBuilder() {
                    if (objectBuilder_ == null) {
                        objectBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Object.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.ObjectOrBuilder>(
                                getObject(), getParentForChildren(), isClean());
                        object_ = null;
                    }
                    return objectBuilder_;
                }

                // @@protoc_insertion_point(builder_scope:Mysqlx.Admin.CommandExecute.Argument)
            }

            static {
                defaultInstance = new Argument(true);
                defaultInstance.initFields();
            }

            // @@protoc_insertion_point(class_scope:Mysqlx.Admin.CommandExecute.Argument)
        }

        private int bitField0_;
        public static final int COMMAND_FIELD_NUMBER = 1;
        private java.lang.Object command_;

        /**
         * <code>required string command = 1;</code>
         */
        public boolean hasCommand() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required string command = 1;</code>
         */
        public java.lang.String getCommand() {
            java.lang.Object ref = command_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    command_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string command = 1;</code>
         */
        public com.google.protobuf.ByteString getCommandBytes() {
            java.lang.Object ref = command_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                command_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ARGS_FIELD_NUMBER = 2;
        private java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument> args_;

        /**
         * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
         */
        public java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument> getArgsList() {
            return args_;
        }

        /**
         * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
         */
        public java.util.List<? extends com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.ArgumentOrBuilder> getArgsOrBuilderList() {
            return args_;
        }

        /**
         * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
         */
        public int getArgsCount() {
            return args_.size();
        }

        /**
         * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
         */
        public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument getArgs(int index) {
            return args_.get(index);
        }

        /**
         * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
         */
        public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.ArgumentOrBuilder getArgsOrBuilder(int index) {
            return args_.get(index);
        }

        private void initFields() {
            command_ = "";
            args_ = java.util.Collections.emptyList();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;

            if (!hasCommand()) {
                memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getArgsCount(); i++) {
                if (!getArgs(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getCommandBytes());
            }
            for (int i = 0; i < args_.size(); i++) {
                output.writeMessage(2, args_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1)
                return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, getCommandBytes());
            }
            for (int i = 0; i < args_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(2, args_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parseFrom(com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parseFrom(com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parseFrom(byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parseFrom(byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parseFrom(java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parseFrom(java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parseDelimitedFrom(java.io.InputStream input) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parseDelimitedFrom(java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parseFrom(com.google.protobuf.CodedInputStream input) throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parseFrom(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code Mysqlx.Admin.CommandExecute}
         *
         * <pre>
         * Execute an administrative command
         * :param command: the name of the command to execute
         * :param args: a list of Argument values, with the command specific list of parameters
         * Available commands and argument list are implementation specific.
         * :Returns: return is identical to that of StmtExecute
         * </pre>
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Admin.CommandExecute)
                com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecuteOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.internal_static_Mysqlx_Admin_CommandExecute_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.internal_static_Mysqlx_Admin_CommandExecute_fieldAccessorTable.ensureFieldAccessorsInitialized(
                        com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.class, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Builder.class);
            }

            // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getArgsFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                command_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                if (argsBuilder_ == null) {
                    args_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                    argsBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.internal_static_Mysqlx_Admin_CommandExecute_descriptor;
            }

            public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute getDefaultInstanceForType() {
                return com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.getDefaultInstance();
            }

            public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute build() {
                com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute buildPartial() {
                com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute result = new com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.command_ = command_;
                if (argsBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002)) {
                        args_ = java.util.Collections.unmodifiableList(args_);
                        bitField0_ = (bitField0_ & ~0x00000002);
                    }
                    result.args_ = args_;
                } else {
                    result.args_ = argsBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute) {
                    return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute other) {
                if (other == com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.getDefaultInstance())
                    return this;
                if (other.hasCommand()) {
                    bitField0_ |= 0x00000001;
                    command_ = other.command_;
                    onChanged();
                }
                if (argsBuilder_ == null) {
                    if (!other.args_.isEmpty()) {
                        if (args_.isEmpty()) {
                            args_ = other.args_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                        } else {
                            ensureArgsIsMutable();
                            args_.addAll(other.args_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.args_.isEmpty()) {
                        if (argsBuilder_.isEmpty()) {
                            argsBuilder_.dispose();
                            argsBuilder_ = null;
                            args_ = other.args_;
                            bitField0_ = (bitField0_ & ~0x00000002);
                            argsBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getArgsFieldBuilder() : null;
                        } else {
                            argsBuilder_.addAllMessages(other.args_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasCommand()) {

                    return false;
                }
                for (int i = 0; i < getArgsCount(); i++) {
                    if (!getArgs(i).isInitialized()) {

                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private java.lang.Object command_ = "";

            /**
             * <code>required string command = 1;</code>
             */
            public boolean hasCommand() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required string command = 1;</code>
             */
            public java.lang.String getCommand() {
                java.lang.Object ref = command_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        command_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string command = 1;</code>
             */
            public com.google.protobuf.ByteString getCommandBytes() {
                java.lang.Object ref = command_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    command_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string command = 1;</code>
             */
            public Builder setCommand(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                command_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string command = 1;</code>
             */
            public Builder clearCommand() {
                bitField0_ = (bitField0_ & ~0x00000001);
                command_ = getDefaultInstance().getCommand();
                onChanged();
                return this;
            }

            /**
             * <code>required string command = 1;</code>
             */
            public Builder setCommandBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                command_ = value;
                onChanged();
                return this;
            }

            private java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument> args_ = java.util.Collections.emptyList();

            private void ensureArgsIsMutable() {
                if (!((bitField0_ & 0x00000002) == 0x00000002)) {
                    args_ = new java.util.ArrayList<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument>(args_);
                    bitField0_ |= 0x00000002;
                }
            }

            private com.google.protobuf.RepeatedFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.ArgumentOrBuilder> argsBuilder_;

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument> getArgsList() {
                if (argsBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(args_);
                } else {
                    return argsBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public int getArgsCount() {
                if (argsBuilder_ == null) {
                    return args_.size();
                } else {
                    return argsBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument getArgs(int index) {
                if (argsBuilder_ == null) {
                    return args_.get(index);
                } else {
                    return argsBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public Builder setArgs(int index, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument value) {
                if (argsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureArgsIsMutable();
                    args_.set(index, value);
                    onChanged();
                } else {
                    argsBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public Builder setArgs(int index, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder builderForValue) {
                if (argsBuilder_ == null) {
                    ensureArgsIsMutable();
                    args_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    argsBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public Builder addArgs(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument value) {
                if (argsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureArgsIsMutable();
                    args_.add(value);
                    onChanged();
                } else {
                    argsBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public Builder addArgs(int index, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument value) {
                if (argsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureArgsIsMutable();
                    args_.add(index, value);
                    onChanged();
                } else {
                    argsBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public Builder addArgs(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder builderForValue) {
                if (argsBuilder_ == null) {
                    ensureArgsIsMutable();
                    args_.add(builderForValue.build());
                    onChanged();
                } else {
                    argsBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public Builder addArgs(int index, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder builderForValue) {
                if (argsBuilder_ == null) {
                    ensureArgsIsMutable();
                    args_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    argsBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public Builder addAllArgs(java.lang.Iterable<? extends com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument> values) {
                if (argsBuilder_ == null) {
                    ensureArgsIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(values, args_);
                    onChanged();
                } else {
                    argsBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public Builder clearArgs() {
                if (argsBuilder_ == null) {
                    args_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000002);
                    onChanged();
                } else {
                    argsBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public Builder removeArgs(int index) {
                if (argsBuilder_ == null) {
                    ensureArgsIsMutable();
                    args_.remove(index);
                    onChanged();
                } else {
                    argsBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder getArgsBuilder(int index) {
                return getArgsFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.ArgumentOrBuilder getArgsOrBuilder(int index) {
                if (argsBuilder_ == null) {
                    return args_.get(index);
                } else {
                    return argsBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public java.util.List<? extends com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.ArgumentOrBuilder> getArgsOrBuilderList() {
                if (argsBuilder_ != null) {
                    return argsBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(args_);
                }
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder addArgsBuilder() {
                return getArgsFieldBuilder().addBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.getDefaultInstance());
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder addArgsBuilder(int index) {
                return getArgsFieldBuilder().addBuilder(index, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.getDefaultInstance());
            }

            /**
             * <code>repeated .Mysqlx.Admin.CommandExecute.Argument args = 2;</code>
             */
            public java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder> getArgsBuilderList() {
                return getArgsFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.ArgumentOrBuilder> getArgsFieldBuilder() {
                if (argsBuilder_ == null) {
                    argsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.Argument.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxAdmin.CommandExecute.ArgumentOrBuilder>(
                            args_, ((bitField0_ & 0x00000002) == 0x00000002), getParentForChildren(), isClean());
                    args_ = null;
                }
                return argsBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:Mysqlx.Admin.CommandExecute)
        }

        static {
            defaultInstance = new CommandExecute(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:Mysqlx.Admin.CommandExecute)
    }

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_Mysqlx_Admin_CommandExecute_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_Mysqlx_Admin_CommandExecute_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor internal_static_Mysqlx_Admin_CommandExecute_Argument_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_Mysqlx_Admin_CommandExecute_Argument_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
    static {
        java.lang.String[] descriptorData = {
                "\n\022mysqlx_admin.proto\022\014Mysqlx.Admin\032\021mysq" + "lx_expr.proto\032\026mysqlx_datatypes.proto\"\215\003"
                        + "\n\016CommandExecute\022\017\n\007command\030\001 \002(\t\0223\n\004arg" + "s\030\002 \003(\0132%.Mysqlx.Admin.CommandExecute.Ar"
                        + "gument\032\264\002\n\010Argument\0228\n\004type\030\001 \002(\0162*.Mysq" + "lx.Admin.CommandExecute.Argument.Type\022(\n"
                        + "\006scalar\030\002 \001(\0132\030.Mysqlx.Datatypes.Scalar\022" + "4\n\rdocument_path\030\003 \003(\0132\035.Mysqlx.Expr.Doc"
                        + "umentPathItem\022&\n\005array\030\004 \001(\0132\027.Mysqlx.Da" + "tatypes.Array\022(\n\006object\030\005 \001(\0132\030.Mysqlx.D",
                "atatypes.Object\"<\n\004Type\022\n\n\006SCALAR\020\001\022\021\n\rD"
                        + "OCUMENT_PATH\020\002\022\t\n\005ARRAY\020\003\022\n\n\006OBJECT\020\004B\036\n" + "\034com.mysql.cj.mysqlx.protobuf" };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
            public com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
            }
        };
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData, new com.google.protobuf.Descriptors.FileDescriptor[] {
                com.mysql.cj.mysqlx.protobuf.MysqlxExpr.getDescriptor(), com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.getDescriptor(), }, assigner);
        internal_static_Mysqlx_Admin_CommandExecute_descriptor = getDescriptor().getMessageTypes().get(0);
        internal_static_Mysqlx_Admin_CommandExecute_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_Mysqlx_Admin_CommandExecute_descriptor, new java.lang.String[] { "Command", "Args", });
        internal_static_Mysqlx_Admin_CommandExecute_Argument_descriptor = internal_static_Mysqlx_Admin_CommandExecute_descriptor.getNestedTypes().get(0);
        internal_static_Mysqlx_Admin_CommandExecute_Argument_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_Mysqlx_Admin_CommandExecute_Argument_descriptor,
                new java.lang.String[] { "Type", "Scalar", "DocumentPath", "Array", "Object", });
        com.mysql.cj.mysqlx.protobuf.MysqlxExpr.getDescriptor();
        com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.getDescriptor();
    }

    // @@protoc_insertion_point(outer_class_scope)
}
