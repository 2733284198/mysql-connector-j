// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mysqlx_sql.proto

package com.mysql.cj.mysqlx.protobuf;

public final class MysqlxSql {
  private MysqlxSql() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface RowOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.Row)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated bytes field = 1;</code>
     */
    java.util.List<com.google.protobuf.ByteString> getFieldList();
    /**
     * <code>repeated bytes field = 1;</code>
     */
    int getFieldCount();
    /**
     * <code>repeated bytes field = 1;</code>
     */
    com.google.protobuf.ByteString getField(int index);
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.Row}
   *
   * <pre>
   * Row in a Resultset
   * a row is a list of fields encoded as byte sequences.
   * The type of the fields is provided by the ColumnMetadata and can be used to determine
   * the appropriate message to use to decode the contents of the field (one of the RowField* messages)
   * If a field length is 0, it is to be interpreted as NULL, otherwise the value can be extracted by protobuf
   * decoding the bytearray.
   * </pre>
   */
  public static final class Row extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.Row)
      RowOrBuilder {
    // Use Row.newBuilder() to construct.
    private Row(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Row(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Row defaultInstance;
    public static Row getDefaultInstance() {
      return defaultInstance;
    }

    public Row getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Row(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                field_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                mutable_bitField0_ |= 0x00000001;
              }
              field_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          field_ = java.util.Collections.unmodifiableList(field_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_Row_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_Row_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row.Builder.class);
    }

    public static com.google.protobuf.Parser<Row> PARSER =
        new com.google.protobuf.AbstractParser<Row>() {
      public Row parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Row(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Row> getParserForType() {
      return PARSER;
    }

    public static final int FIELD_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> field_;
    /**
     * <code>repeated bytes field = 1;</code>
     */
    public java.util.List<com.google.protobuf.ByteString>
        getFieldList() {
      return field_;
    }
    /**
     * <code>repeated bytes field = 1;</code>
     */
    public int getFieldCount() {
      return field_.size();
    }
    /**
     * <code>repeated bytes field = 1;</code>
     */
    public com.google.protobuf.ByteString getField(int index) {
      return field_.get(index);
    }

    private void initFields() {
      field_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < field_.size(); i++) {
        output.writeBytes(1, field_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < field_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(field_.get(i));
        }
        size += dataSize;
        size += 1 * getFieldList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.Row}
     *
     * <pre>
     * Row in a Resultset
     * a row is a list of fields encoded as byte sequences.
     * The type of the fields is provided by the ColumnMetadata and can be used to determine
     * the appropriate message to use to decode the contents of the field (one of the RowField* messages)
     * If a field length is 0, it is to be interpreted as NULL, otherwise the value can be extracted by protobuf
     * decoding the bytearray.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.Row)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_Row_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_Row_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_Row_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          field_ = java.util.Collections.unmodifiableList(field_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.field_ = field_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row.getDefaultInstance()) return this;
        if (!other.field_.isEmpty()) {
          if (field_.isEmpty()) {
            field_ = other.field_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFieldIsMutable();
            field_.addAll(other.field_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.Row) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.google.protobuf.ByteString> field_ = java.util.Collections.emptyList();
      private void ensureFieldIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          field_ = new java.util.ArrayList<com.google.protobuf.ByteString>(field_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated bytes field = 1;</code>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getFieldList() {
        return java.util.Collections.unmodifiableList(field_);
      }
      /**
       * <code>repeated bytes field = 1;</code>
       */
      public int getFieldCount() {
        return field_.size();
      }
      /**
       * <code>repeated bytes field = 1;</code>
       */
      public com.google.protobuf.ByteString getField(int index) {
        return field_.get(index);
      }
      /**
       * <code>repeated bytes field = 1;</code>
       */
      public Builder setField(
          int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFieldIsMutable();
        field_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes field = 1;</code>
       */
      public Builder addField(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureFieldIsMutable();
        field_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes field = 1;</code>
       */
      public Builder addAllField(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        ensureFieldIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, field_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated bytes field = 1;</code>
       */
      public Builder clearField() {
        field_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.Row)
    }

    static {
      defaultInstance = new Row(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.Row)
  }

  public interface StmtExecuteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.StmtExecute)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string namespace = 3 [default = "sql"];</code>
     */
    boolean hasNamespace();
    /**
     * <code>optional string namespace = 3 [default = "sql"];</code>
     */
    java.lang.String getNamespace();
    /**
     * <code>optional string namespace = 3 [default = "sql"];</code>
     */
    com.google.protobuf.ByteString
        getNamespaceBytes();

    /**
     * <code>required bytes stmt = 1;</code>
     */
    boolean hasStmt();
    /**
     * <code>required bytes stmt = 1;</code>
     */
    com.google.protobuf.ByteString getStmt();

    /**
     * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
     */
    java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any> 
        getArgsList();
    /**
     * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
     */
    com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any getArgs(int index);
    /**
     * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
     */
    int getArgsCount();
    /**
     * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
     */
    java.util.List<? extends com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.AnyOrBuilder> 
        getArgsOrBuilderList();
    /**
     * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
     */
    com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.AnyOrBuilder getArgsOrBuilder(
        int index);

    /**
     * <code>optional bool compact_metadata = 4 [default = false];</code>
     */
    boolean hasCompactMetadata();
    /**
     * <code>optional bool compact_metadata = 4 [default = false];</code>
     */
    boolean getCompactMetadata();
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.StmtExecute}
   *
   * <pre>
   * execute a statement in the given namespace
   * .. uml::
   *   client -&gt; server: StmtExecute
   *   loop has more resultsets
   *   loop has more columns
   *   server --&gt; client: ColumnMetaData
   *   end
   *   loop has more rows
   *   server --&gt; client: Row
   *   end
   *   alt has more resultsets
   *   server --&gt; client: ResultFetchDoneMoreResultsets
   *   else
   *   server --&gt; client: ResultFetchDone
   *   end
   *   end
   *   server --&gt; client: StmtExecuteOk
   * Notices:
   *   This message may generate a notice containing WARNINGs generated by its execution.
   *   This message may generate a notice containing INFO messages generated by its execution.
   * :param namespace: namespace of the statement to be executed
   * :param stmt: statement that shall be executed.
   * :param args: values for wildcard replacements
   * :param compact_metadata: send only type information for ColumnMetadata, skipping names and others
   * :returns:
   *    * :protobuf:msg:`Mysqlx.Sql::StmtExecuteOk` or
   *    * a resultset-set starting with :protobuf:msg:`Mysqlx.Sql::ColumnMetaData`
   *    * followed by :protobuf:msg:`Mysqlx.Sql::StmtExecuteOk`
   * </pre>
   */
  public static final class StmtExecute extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.StmtExecute)
      StmtExecuteOrBuilder {
    // Use StmtExecute.newBuilder() to construct.
    private StmtExecute(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StmtExecute(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StmtExecute defaultInstance;
    public static StmtExecute getDefaultInstance() {
      return defaultInstance;
    }

    public StmtExecute getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StmtExecute(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000002;
              stmt_ = input.readBytes();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                args_ = new java.util.ArrayList<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any>();
                mutable_bitField0_ |= 0x00000004;
              }
              args_.add(input.readMessage(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              namespace_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              compactMetadata_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          args_ = java.util.Collections.unmodifiableList(args_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_StmtExecute_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_StmtExecute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute.Builder.class);
    }

    public static com.google.protobuf.Parser<StmtExecute> PARSER =
        new com.google.protobuf.AbstractParser<StmtExecute>() {
      public StmtExecute parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StmtExecute(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StmtExecute> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAMESPACE_FIELD_NUMBER = 3;
    private java.lang.Object namespace_;
    /**
     * <code>optional string namespace = 3 [default = "sql"];</code>
     */
    public boolean hasNamespace() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string namespace = 3 [default = "sql"];</code>
     */
    public java.lang.String getNamespace() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          namespace_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string namespace = 3 [default = "sql"];</code>
     */
    public com.google.protobuf.ByteString
        getNamespaceBytes() {
      java.lang.Object ref = namespace_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        namespace_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STMT_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString stmt_;
    /**
     * <code>required bytes stmt = 1;</code>
     */
    public boolean hasStmt() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bytes stmt = 1;</code>
     */
    public com.google.protobuf.ByteString getStmt() {
      return stmt_;
    }

    public static final int ARGS_FIELD_NUMBER = 2;
    private java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any> args_;
    /**
     * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
     */
    public java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any> getArgsList() {
      return args_;
    }
    /**
     * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
     */
    public java.util.List<? extends com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.AnyOrBuilder> 
        getArgsOrBuilderList() {
      return args_;
    }
    /**
     * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
     */
    public int getArgsCount() {
      return args_.size();
    }
    /**
     * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
     */
    public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any getArgs(int index) {
      return args_.get(index);
    }
    /**
     * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
     */
    public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.AnyOrBuilder getArgsOrBuilder(
        int index) {
      return args_.get(index);
    }

    public static final int COMPACT_METADATA_FIELD_NUMBER = 4;
    private boolean compactMetadata_;
    /**
     * <code>optional bool compact_metadata = 4 [default = false];</code>
     */
    public boolean hasCompactMetadata() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bool compact_metadata = 4 [default = false];</code>
     */
    public boolean getCompactMetadata() {
      return compactMetadata_;
    }

    private void initFields() {
      namespace_ = "sql";
      stmt_ = com.google.protobuf.ByteString.EMPTY;
      args_ = java.util.Collections.emptyList();
      compactMetadata_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasStmt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getArgsCount(); i++) {
        if (!getArgs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(1, stmt_);
      }
      for (int i = 0; i < args_.size(); i++) {
        output.writeMessage(2, args_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(3, getNamespaceBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(4, compactMetadata_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, stmt_);
      }
      for (int i = 0; i < args_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, args_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNamespaceBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, compactMetadata_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.StmtExecute}
     *
     * <pre>
     * execute a statement in the given namespace
     * .. uml::
     *   client -&gt; server: StmtExecute
     *   loop has more resultsets
     *   loop has more columns
     *   server --&gt; client: ColumnMetaData
     *   end
     *   loop has more rows
     *   server --&gt; client: Row
     *   end
     *   alt has more resultsets
     *   server --&gt; client: ResultFetchDoneMoreResultsets
     *   else
     *   server --&gt; client: ResultFetchDone
     *   end
     *   end
     *   server --&gt; client: StmtExecuteOk
     * Notices:
     *   This message may generate a notice containing WARNINGs generated by its execution.
     *   This message may generate a notice containing INFO messages generated by its execution.
     * :param namespace: namespace of the statement to be executed
     * :param stmt: statement that shall be executed.
     * :param args: values for wildcard replacements
     * :param compact_metadata: send only type information for ColumnMetadata, skipping names and others
     * :returns:
     *    * :protobuf:msg:`Mysqlx.Sql::StmtExecuteOk` or
     *    * a resultset-set starting with :protobuf:msg:`Mysqlx.Sql::ColumnMetaData`
     *    * followed by :protobuf:msg:`Mysqlx.Sql::StmtExecuteOk`
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.StmtExecute)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_StmtExecute_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_StmtExecute_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getArgsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        namespace_ = "sql";
        bitField0_ = (bitField0_ & ~0x00000001);
        stmt_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (argsBuilder_ == null) {
          args_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          argsBuilder_.clear();
        }
        compactMetadata_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_StmtExecute_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.namespace_ = namespace_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.stmt_ = stmt_;
        if (argsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            args_ = java.util.Collections.unmodifiableList(args_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.args_ = args_;
        } else {
          result.args_ = argsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.compactMetadata_ = compactMetadata_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute.getDefaultInstance()) return this;
        if (other.hasNamespace()) {
          bitField0_ |= 0x00000001;
          namespace_ = other.namespace_;
          onChanged();
        }
        if (other.hasStmt()) {
          setStmt(other.getStmt());
        }
        if (argsBuilder_ == null) {
          if (!other.args_.isEmpty()) {
            if (args_.isEmpty()) {
              args_ = other.args_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureArgsIsMutable();
              args_.addAll(other.args_);
            }
            onChanged();
          }
        } else {
          if (!other.args_.isEmpty()) {
            if (argsBuilder_.isEmpty()) {
              argsBuilder_.dispose();
              argsBuilder_ = null;
              args_ = other.args_;
              bitField0_ = (bitField0_ & ~0x00000004);
              argsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getArgsFieldBuilder() : null;
            } else {
              argsBuilder_.addAllMessages(other.args_);
            }
          }
        }
        if (other.hasCompactMetadata()) {
          setCompactMetadata(other.getCompactMetadata());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasStmt()) {
          
          return false;
        }
        for (int i = 0; i < getArgsCount(); i++) {
          if (!getArgs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecute) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object namespace_ = "sql";
      /**
       * <code>optional string namespace = 3 [default = "sql"];</code>
       */
      public boolean hasNamespace() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string namespace = 3 [default = "sql"];</code>
       */
      public java.lang.String getNamespace() {
        java.lang.Object ref = namespace_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            namespace_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string namespace = 3 [default = "sql"];</code>
       */
      public com.google.protobuf.ByteString
          getNamespaceBytes() {
        java.lang.Object ref = namespace_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          namespace_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string namespace = 3 [default = "sql"];</code>
       */
      public Builder setNamespace(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namespace_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string namespace = 3 [default = "sql"];</code>
       */
      public Builder clearNamespace() {
        bitField0_ = (bitField0_ & ~0x00000001);
        namespace_ = getDefaultInstance().getNamespace();
        onChanged();
        return this;
      }
      /**
       * <code>optional string namespace = 3 [default = "sql"];</code>
       */
      public Builder setNamespaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        namespace_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString stmt_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes stmt = 1;</code>
       */
      public boolean hasStmt() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bytes stmt = 1;</code>
       */
      public com.google.protobuf.ByteString getStmt() {
        return stmt_;
      }
      /**
       * <code>required bytes stmt = 1;</code>
       */
      public Builder setStmt(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        stmt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes stmt = 1;</code>
       */
      public Builder clearStmt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        stmt_ = getDefaultInstance().getStmt();
        onChanged();
        return this;
      }

      private java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any> args_ =
        java.util.Collections.emptyList();
      private void ensureArgsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          args_ = new java.util.ArrayList<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any>(args_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.AnyOrBuilder> argsBuilder_;

      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any> getArgsList() {
        if (argsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(args_);
        } else {
          return argsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public int getArgsCount() {
        if (argsBuilder_ == null) {
          return args_.size();
        } else {
          return argsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any getArgs(int index) {
        if (argsBuilder_ == null) {
          return args_.get(index);
        } else {
          return argsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public Builder setArgs(
          int index, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.set(index, value);
          onChanged();
        } else {
          argsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public Builder setArgs(
          int index, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.set(index, builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public Builder addArgs(com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.add(value);
          onChanged();
        } else {
          argsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public Builder addArgs(
          int index, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any value) {
        if (argsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgsIsMutable();
          args_.add(index, value);
          onChanged();
        } else {
          argsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public Builder addArgs(
          com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.add(builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public Builder addArgs(
          int index, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.Builder builderForValue) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.add(index, builderForValue.build());
          onChanged();
        } else {
          argsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public Builder addAllArgs(
          java.lang.Iterable<? extends com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any> values) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, args_);
          onChanged();
        } else {
          argsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public Builder clearArgs() {
        if (argsBuilder_ == null) {
          args_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          argsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public Builder removeArgs(int index) {
        if (argsBuilder_ == null) {
          ensureArgsIsMutable();
          args_.remove(index);
          onChanged();
        } else {
          argsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.Builder getArgsBuilder(
          int index) {
        return getArgsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.AnyOrBuilder getArgsOrBuilder(
          int index) {
        if (argsBuilder_ == null) {
          return args_.get(index);  } else {
          return argsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public java.util.List<? extends com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.AnyOrBuilder> 
           getArgsOrBuilderList() {
        if (argsBuilder_ != null) {
          return argsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(args_);
        }
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.Builder addArgsBuilder() {
        return getArgsFieldBuilder().addBuilder(
            com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.getDefaultInstance());
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.Builder addArgsBuilder(
          int index) {
        return getArgsFieldBuilder().addBuilder(
            index, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.getDefaultInstance());
      }
      /**
       * <code>repeated .Mysqlx.Datatypes.Any args = 2;</code>
       */
      public java.util.List<com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.Builder> 
           getArgsBuilderList() {
        return getArgsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.AnyOrBuilder> 
          getArgsFieldBuilder() {
        if (argsBuilder_ == null) {
          argsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.Any.Builder, com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.AnyOrBuilder>(
                  args_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          args_ = null;
        }
        return argsBuilder_;
      }

      private boolean compactMetadata_ ;
      /**
       * <code>optional bool compact_metadata = 4 [default = false];</code>
       */
      public boolean hasCompactMetadata() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool compact_metadata = 4 [default = false];</code>
       */
      public boolean getCompactMetadata() {
        return compactMetadata_;
      }
      /**
       * <code>optional bool compact_metadata = 4 [default = false];</code>
       */
      public Builder setCompactMetadata(boolean value) {
        bitField0_ |= 0x00000008;
        compactMetadata_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool compact_metadata = 4 [default = false];</code>
       */
      public Builder clearCompactMetadata() {
        bitField0_ = (bitField0_ & ~0x00000008);
        compactMetadata_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.StmtExecute)
    }

    static {
      defaultInstance = new StmtExecute(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.StmtExecute)
  }

  public interface StmtExecuteOkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.StmtExecuteOk)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 rows_affected = 1;</code>
     */
    boolean hasRowsAffected();
    /**
     * <code>optional uint64 rows_affected = 1;</code>
     */
    long getRowsAffected();

    /**
     * <code>optional uint64 last_insert_id = 2;</code>
     */
    boolean hasLastInsertId();
    /**
     * <code>optional uint64 last_insert_id = 2;</code>
     */
    long getLastInsertId();
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.StmtExecuteOk}
   *
   * <pre>
   * statement executed successful
   * :param rows_affected: number of rows that were affected by the operation (such as inserted, deleted, updated etc)
   * :param last_insert_id: if the operation was an insert on a relational table with an AUTO_INCREMENT column, this will contain the value that was used
   * </pre>
   */
  public static final class StmtExecuteOk extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.StmtExecuteOk)
      StmtExecuteOkOrBuilder {
    // Use StmtExecuteOk.newBuilder() to construct.
    private StmtExecuteOk(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private StmtExecuteOk(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final StmtExecuteOk defaultInstance;
    public static StmtExecuteOk getDefaultInstance() {
      return defaultInstance;
    }

    public StmtExecuteOk getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private StmtExecuteOk(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rowsAffected_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              lastInsertId_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_StmtExecuteOk_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_StmtExecuteOk_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk.Builder.class);
    }

    public static com.google.protobuf.Parser<StmtExecuteOk> PARSER =
        new com.google.protobuf.AbstractParser<StmtExecuteOk>() {
      public StmtExecuteOk parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new StmtExecuteOk(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<StmtExecuteOk> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ROWS_AFFECTED_FIELD_NUMBER = 1;
    private long rowsAffected_;
    /**
     * <code>optional uint64 rows_affected = 1;</code>
     */
    public boolean hasRowsAffected() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint64 rows_affected = 1;</code>
     */
    public long getRowsAffected() {
      return rowsAffected_;
    }

    public static final int LAST_INSERT_ID_FIELD_NUMBER = 2;
    private long lastInsertId_;
    /**
     * <code>optional uint64 last_insert_id = 2;</code>
     */
    public boolean hasLastInsertId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint64 last_insert_id = 2;</code>
     */
    public long getLastInsertId() {
      return lastInsertId_;
    }

    private void initFields() {
      rowsAffected_ = 0L;
      lastInsertId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, rowsAffected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt64(2, lastInsertId_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, rowsAffected_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, lastInsertId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.StmtExecuteOk}
     *
     * <pre>
     * statement executed successful
     * :param rows_affected: number of rows that were affected by the operation (such as inserted, deleted, updated etc)
     * :param last_insert_id: if the operation was an insert on a relational table with an AUTO_INCREMENT column, this will contain the value that was used
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.StmtExecuteOk)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_StmtExecuteOk_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_StmtExecuteOk_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        rowsAffected_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        lastInsertId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_StmtExecuteOk_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rowsAffected_ = rowsAffected_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.lastInsertId_ = lastInsertId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk.getDefaultInstance()) return this;
        if (other.hasRowsAffected()) {
          setRowsAffected(other.getRowsAffected());
        }
        if (other.hasLastInsertId()) {
          setLastInsertId(other.getLastInsertId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.StmtExecuteOk) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long rowsAffected_ ;
      /**
       * <code>optional uint64 rows_affected = 1;</code>
       */
      public boolean hasRowsAffected() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 rows_affected = 1;</code>
       */
      public long getRowsAffected() {
        return rowsAffected_;
      }
      /**
       * <code>optional uint64 rows_affected = 1;</code>
       */
      public Builder setRowsAffected(long value) {
        bitField0_ |= 0x00000001;
        rowsAffected_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 rows_affected = 1;</code>
       */
      public Builder clearRowsAffected() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rowsAffected_ = 0L;
        onChanged();
        return this;
      }

      private long lastInsertId_ ;
      /**
       * <code>optional uint64 last_insert_id = 2;</code>
       */
      public boolean hasLastInsertId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint64 last_insert_id = 2;</code>
       */
      public long getLastInsertId() {
        return lastInsertId_;
      }
      /**
       * <code>optional uint64 last_insert_id = 2;</code>
       */
      public Builder setLastInsertId(long value) {
        bitField0_ |= 0x00000002;
        lastInsertId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 last_insert_id = 2;</code>
       */
      public Builder clearLastInsertId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        lastInsertId_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.StmtExecuteOk)
    }

    static {
      defaultInstance = new StmtExecuteOk(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.StmtExecuteOk)
  }

  public interface ResultFetchDoneMoreResultsetsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.ResultFetchDoneMoreResultsets)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.ResultFetchDoneMoreResultsets}
   *
   * <pre>
   * resultset is finished, but more resultsets available
   * After ``ResultFetchDoneMoreResultsets`` all following
   * * :protobuf:msg:`Mysqlx.Sql::ResultFetchMetaData` and
   * * :protobuf:msg:`Mysqlx.Sql::ResultFetchRows` calls
   * will access the next resultset
   * client should send a :protobuf:msg:`Mysqlx.Sql::ResultFetchRows` to get the next resultset
   * </pre>
   */
  public static final class ResultFetchDoneMoreResultsets extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.ResultFetchDoneMoreResultsets)
      ResultFetchDoneMoreResultsetsOrBuilder {
    // Use ResultFetchDoneMoreResultsets.newBuilder() to construct.
    private ResultFetchDoneMoreResultsets(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ResultFetchDoneMoreResultsets(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ResultFetchDoneMoreResultsets defaultInstance;
    public static ResultFetchDoneMoreResultsets getDefaultInstance() {
      return defaultInstance;
    }

    public ResultFetchDoneMoreResultsets getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ResultFetchDoneMoreResultsets(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ResultFetchDoneMoreResultsets_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ResultFetchDoneMoreResultsets_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets.Builder.class);
    }

    public static com.google.protobuf.Parser<ResultFetchDoneMoreResultsets> PARSER =
        new com.google.protobuf.AbstractParser<ResultFetchDoneMoreResultsets>() {
      public ResultFetchDoneMoreResultsets parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResultFetchDoneMoreResultsets(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ResultFetchDoneMoreResultsets> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.ResultFetchDoneMoreResultsets}
     *
     * <pre>
     * resultset is finished, but more resultsets available
     * After ``ResultFetchDoneMoreResultsets`` all following
     * * :protobuf:msg:`Mysqlx.Sql::ResultFetchMetaData` and
     * * :protobuf:msg:`Mysqlx.Sql::ResultFetchRows` calls
     * will access the next resultset
     * client should send a :protobuf:msg:`Mysqlx.Sql::ResultFetchRows` to get the next resultset
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.ResultFetchDoneMoreResultsets)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsetsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ResultFetchDoneMoreResultsets_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ResultFetchDoneMoreResultsets_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ResultFetchDoneMoreResultsets_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneMoreResultsets) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.ResultFetchDoneMoreResultsets)
    }

    static {
      defaultInstance = new ResultFetchDoneMoreResultsets(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.ResultFetchDoneMoreResultsets)
  }

  public interface ResultFetchDoneOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.ResultFetchDone)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.ResultFetchDone}
   *
   * <pre>
   * resultset is finished
   * </pre>
   */
  public static final class ResultFetchDone extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.ResultFetchDone)
      ResultFetchDoneOrBuilder {
    // Use ResultFetchDone.newBuilder() to construct.
    private ResultFetchDone(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ResultFetchDone(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ResultFetchDone defaultInstance;
    public static ResultFetchDone getDefaultInstance() {
      return defaultInstance;
    }

    public ResultFetchDone getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ResultFetchDone(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ResultFetchDone_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ResultFetchDone_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone.Builder.class);
    }

    public static com.google.protobuf.Parser<ResultFetchDone> PARSER =
        new com.google.protobuf.AbstractParser<ResultFetchDone>() {
      public ResultFetchDone parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ResultFetchDone(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ResultFetchDone> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.ResultFetchDone}
     *
     * <pre>
     * resultset is finished
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.ResultFetchDone)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDoneOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ResultFetchDone_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ResultFetchDone_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ResultFetchDone_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.ResultFetchDone) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.ResultFetchDone)
    }

    static {
      defaultInstance = new ResultFetchDone(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.ResultFetchDone)
  }

  public interface ColumnMetaDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.ColumnMetaData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .Mysqlx.Sql.ColumnMetaData.FieldType type = 1;</code>
     *
     * <pre>
     * datatype of the field in a row
     * </pre>
     */
    boolean hasType();
    /**
     * <code>required .Mysqlx.Sql.ColumnMetaData.FieldType type = 1;</code>
     *
     * <pre>
     * datatype of the field in a row
     * </pre>
     */
    com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType getType();

    /**
     * <code>optional bytes name = 2;</code>
     */
    boolean hasName();
    /**
     * <code>optional bytes name = 2;</code>
     */
    com.google.protobuf.ByteString getName();

    /**
     * <code>optional bytes original_name = 3;</code>
     */
    boolean hasOriginalName();
    /**
     * <code>optional bytes original_name = 3;</code>
     */
    com.google.protobuf.ByteString getOriginalName();

    /**
     * <code>optional bytes table = 4;</code>
     */
    boolean hasTable();
    /**
     * <code>optional bytes table = 4;</code>
     */
    com.google.protobuf.ByteString getTable();

    /**
     * <code>optional bytes original_table = 5;</code>
     */
    boolean hasOriginalTable();
    /**
     * <code>optional bytes original_table = 5;</code>
     */
    com.google.protobuf.ByteString getOriginalTable();

    /**
     * <code>optional bytes schema = 6;</code>
     */
    boolean hasSchema();
    /**
     * <code>optional bytes schema = 6;</code>
     */
    com.google.protobuf.ByteString getSchema();

    /**
     * <code>optional bytes catalog = 7;</code>
     */
    boolean hasCatalog();
    /**
     * <code>optional bytes catalog = 7;</code>
     */
    com.google.protobuf.ByteString getCatalog();

    /**
     * <code>optional string charset = 8;</code>
     */
    boolean hasCharset();
    /**
     * <code>optional string charset = 8;</code>
     */
    java.lang.String getCharset();
    /**
     * <code>optional string charset = 8;</code>
     */
    com.google.protobuf.ByteString
        getCharsetBytes();

    /**
     * <code>optional uint32 fractional_digits = 9;</code>
     */
    boolean hasFractionalDigits();
    /**
     * <code>optional uint32 fractional_digits = 9;</code>
     */
    int getFractionalDigits();

    /**
     * <code>optional uint32 length = 10;</code>
     */
    boolean hasLength();
    /**
     * <code>optional uint32 length = 10;</code>
     */
    int getLength();

    /**
     * <code>optional uint32 flags = 11;</code>
     */
    boolean hasFlags();
    /**
     * <code>optional uint32 flags = 11;</code>
     */
    int getFlags();

    /**
     * <code>optional uint32 content_type = 12;</code>
     */
    boolean hasContentType();
    /**
     * <code>optional uint32 content_type = 12;</code>
     */
    int getContentType();
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.ColumnMetaData}
   *
   * <pre>
   * meta data of a Column
   * .. note:: the encoding used for the different ``bytes`` fields in the meta data is externally
   *   controlled.
   *   .. seealso:: https://dev.mysql.com/doc/refman/5.0/en/charset-connection.html
   * :param type:
   *   .. table:: Expected Datatype of Mysqlx.Sql.Row per SQL Type for non NULL values
   *     ================= ============ =============================== ======= ========== ====== ========
   *     SQL Type          .type        Datatype submessage             .length .frac_dig  .flags .charset
   *     ================= ============ =============================== ======= ========== ====== ========
   *     TINY              SINT         RowFieldSignedInt               x
   *     TINY UNSIGNED     UINT         RowFieldUnsignedInt             x                  x
   *     SHORT             SINT         RowFieldSignedInt               x
   *     SHORT UNSIGNED    UINT         RowFieldUnsignedInt             x                  x
   *     INT24             SINT         RowFieldSignedInt               x
   *     INT24 UNSIGNED    UINT         RowFieldUnsignedInt             x                  x
   *     INT               SINT         RowFieldSignedInt               x
   *     INT UNSIGNED      UINT         RowFieldUnsignedInt             x                  x
   *     LONGLONG          SINT         RowFieldSignedInt               x
   *     LONGLONG UNSIGNED UINT         RowFieldUnsignedInt             x                  x
   *     DOUBLE            DOUBLE       RowFieldDouble                  x       x          x
   *     FLOAT             FLOAT        RowFieldFloat                   x       x          x
   *     DECIMAL           DECIMAL      RowFieldDecimal                 x       x          x
   *     VARCHAR,CHAR,...  BYTES        RowFieldBytes                   x                  x      x
   *     GEOMETRY          BYTES        RowFieldBytes       
   *     TIME              TIME         RowFieldBytes                   x
   *     DATE              DATETIME     RowFieldBytes                   x
   *     DATETIME          DATETIME     RowFieldBytes                   x
   *     YEAR              UINT         RowFieldUnsignedInt             x                  x
   *     TIMESTAMP         DATETIME     RowFieldBytes                   x
   *     SET               SET          RowFieldBytes                                             x
   *     ENUM              ENUM         RowFieldBytes                                             x
   *     NULL              BYTES        RowFieldBytes       
   *     BIT               BIT          RowFieldUnsignedInt             x
   *     ================= ============ =============================== ======= ========== ====== ========
   *   .. note:: the SQL "NULL" value is sent as an empty field value in ``Row``
   * :param name: name of the column
   * :param original_name: name of the column before an alias was applied
   * :param table: name of the table the column orginates from
   * :param original_table: name of the table the column orginates from before an alias was applied
   * :param schema: schema the column originates from
   * :param catalog:
   *   catalog the schema originates from
   *   .. note::
   *     as there is current no support for catalogs in MySQL, don't expect this field to be set.
   *     In the MySQL C/S protocol the field had the value ``def`` all the time.
   * :param fractional_digits: displayed factional decimal digits for floating point and fixed point numbers
   * :param length: maximum count of displayable characters of .type
   * :param flags:
   *   ``.type`` specific flags
   *   ======= ====== ===========
   *   type    value  description
   *   ======= ====== ===========
   *   UINT    0x0001 zerofill
   *   DOUBLE  0x0001 unsigned
   *   FLOAT   0x0001 unsigned
   *   DECIMAL 0x0001 unsigned
   *   BYTES   0x0001 rightpad
   *   ======= ====== ===========
   *   default: 0
   * :param content_type:
   *   a hint about the higher-level encoding of a BYTES field
   *   ====== ====== ===========
   *   type   value  description
   *   ====== ====== ===========
   *   BYTES  0x0001 GEOMETRY (WKB encoding)
   *   BYTES  0x0002 JSON (text encoding)
   *   BYTES  0x0003 XML (text encoding)
   *   ====== ====== ===========
   *   .. note::
   *     this list isn't comprehensive. As guideline: the field's value is expected
   *     to pass a validator check on client and server if this field is set.
   *     If the server adds more internal datatypes that rely on BLOB storage
   *     like image manipulation, seeking into complex types in BLOBs, ... more
   *     types will be added.
   * </pre>
   */
  public static final class ColumnMetaData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.ColumnMetaData)
      ColumnMetaDataOrBuilder {
    // Use ColumnMetaData.newBuilder() to construct.
    private ColumnMetaData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ColumnMetaData(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ColumnMetaData defaultInstance;
    public static ColumnMetaData getDefaultInstance() {
      return defaultInstance;
    }

    public ColumnMetaData getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ColumnMetaData(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType value = com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              originalName_ = input.readBytes();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              table_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              originalTable_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              schema_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              catalog_ = input.readBytes();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              charset_ = bs;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              fractionalDigits_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              length_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              flags_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              contentType_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ColumnMetaData_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ColumnMetaData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.Builder.class);
    }

    public static com.google.protobuf.Parser<ColumnMetaData> PARSER =
        new com.google.protobuf.AbstractParser<ColumnMetaData>() {
      public ColumnMetaData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ColumnMetaData(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ColumnMetaData> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code Mysqlx.Sql.ColumnMetaData.FieldType}
     */
    public enum FieldType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SINT = 1;</code>
       */
      SINT(0, 1),
      /**
       * <code>UINT = 2;</code>
       */
      UINT(1, 2),
      /**
       * <code>DOUBLE = 5;</code>
       */
      DOUBLE(2, 5),
      /**
       * <code>FLOAT = 6;</code>
       */
      FLOAT(3, 6),
      /**
       * <code>BYTES = 7;</code>
       */
      BYTES(4, 7),
      /**
       * <code>TIME = 10;</code>
       */
      TIME(5, 10),
      /**
       * <code>DATETIME = 12;</code>
       */
      DATETIME(6, 12),
      /**
       * <code>SET = 15;</code>
       */
      SET(7, 15),
      /**
       * <code>ENUM = 16;</code>
       */
      ENUM(8, 16),
      /**
       * <code>BIT = 17;</code>
       */
      BIT(9, 17),
      /**
       * <code>DECIMAL = 18;</code>
       */
      DECIMAL(10, 18),
      ;

      /**
       * <code>SINT = 1;</code>
       */
      public static final int SINT_VALUE = 1;
      /**
       * <code>UINT = 2;</code>
       */
      public static final int UINT_VALUE = 2;
      /**
       * <code>DOUBLE = 5;</code>
       */
      public static final int DOUBLE_VALUE = 5;
      /**
       * <code>FLOAT = 6;</code>
       */
      public static final int FLOAT_VALUE = 6;
      /**
       * <code>BYTES = 7;</code>
       */
      public static final int BYTES_VALUE = 7;
      /**
       * <code>TIME = 10;</code>
       */
      public static final int TIME_VALUE = 10;
      /**
       * <code>DATETIME = 12;</code>
       */
      public static final int DATETIME_VALUE = 12;
      /**
       * <code>SET = 15;</code>
       */
      public static final int SET_VALUE = 15;
      /**
       * <code>ENUM = 16;</code>
       */
      public static final int ENUM_VALUE = 16;
      /**
       * <code>BIT = 17;</code>
       */
      public static final int BIT_VALUE = 17;
      /**
       * <code>DECIMAL = 18;</code>
       */
      public static final int DECIMAL_VALUE = 18;


      public final int getNumber() { return value; }

      public static FieldType valueOf(int value) {
        switch (value) {
          case 1: return SINT;
          case 2: return UINT;
          case 5: return DOUBLE;
          case 6: return FLOAT;
          case 7: return BYTES;
          case 10: return TIME;
          case 12: return DATETIME;
          case 15: return SET;
          case 16: return ENUM;
          case 17: return BIT;
          case 18: return DECIMAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FieldType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<FieldType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FieldType>() {
              public FieldType findValueByNumber(int number) {
                return FieldType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.getDescriptor().getEnumTypes().get(0);
      }

      private static final FieldType[] VALUES = values();

      public static FieldType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private FieldType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Mysqlx.Sql.ColumnMetaData.FieldType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType type_;
    /**
     * <code>required .Mysqlx.Sql.ColumnMetaData.FieldType type = 1;</code>
     *
     * <pre>
     * datatype of the field in a row
     * </pre>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .Mysqlx.Sql.ColumnMetaData.FieldType type = 1;</code>
     *
     * <pre>
     * datatype of the field in a row
     * </pre>
     */
    public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType getType() {
      return type_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString name_;
    /**
     * <code>optional bytes name = 2;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes name = 2;</code>
     */
    public com.google.protobuf.ByteString getName() {
      return name_;
    }

    public static final int ORIGINAL_NAME_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString originalName_;
    /**
     * <code>optional bytes original_name = 3;</code>
     */
    public boolean hasOriginalName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes original_name = 3;</code>
     */
    public com.google.protobuf.ByteString getOriginalName() {
      return originalName_;
    }

    public static final int TABLE_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString table_;
    /**
     * <code>optional bytes table = 4;</code>
     */
    public boolean hasTable() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional bytes table = 4;</code>
     */
    public com.google.protobuf.ByteString getTable() {
      return table_;
    }

    public static final int ORIGINAL_TABLE_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString originalTable_;
    /**
     * <code>optional bytes original_table = 5;</code>
     */
    public boolean hasOriginalTable() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional bytes original_table = 5;</code>
     */
    public com.google.protobuf.ByteString getOriginalTable() {
      return originalTable_;
    }

    public static final int SCHEMA_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString schema_;
    /**
     * <code>optional bytes schema = 6;</code>
     */
    public boolean hasSchema() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bytes schema = 6;</code>
     */
    public com.google.protobuf.ByteString getSchema() {
      return schema_;
    }

    public static final int CATALOG_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString catalog_;
    /**
     * <code>optional bytes catalog = 7;</code>
     */
    public boolean hasCatalog() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bytes catalog = 7;</code>
     */
    public com.google.protobuf.ByteString getCatalog() {
      return catalog_;
    }

    public static final int CHARSET_FIELD_NUMBER = 8;
    private java.lang.Object charset_;
    /**
     * <code>optional string charset = 8;</code>
     */
    public boolean hasCharset() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string charset = 8;</code>
     */
    public java.lang.String getCharset() {
      java.lang.Object ref = charset_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          charset_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string charset = 8;</code>
     */
    public com.google.protobuf.ByteString
        getCharsetBytes() {
      java.lang.Object ref = charset_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        charset_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FRACTIONAL_DIGITS_FIELD_NUMBER = 9;
    private int fractionalDigits_;
    /**
     * <code>optional uint32 fractional_digits = 9;</code>
     */
    public boolean hasFractionalDigits() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 fractional_digits = 9;</code>
     */
    public int getFractionalDigits() {
      return fractionalDigits_;
    }

    public static final int LENGTH_FIELD_NUMBER = 10;
    private int length_;
    /**
     * <code>optional uint32 length = 10;</code>
     */
    public boolean hasLength() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional uint32 length = 10;</code>
     */
    public int getLength() {
      return length_;
    }

    public static final int FLAGS_FIELD_NUMBER = 11;
    private int flags_;
    /**
     * <code>optional uint32 flags = 11;</code>
     */
    public boolean hasFlags() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 flags = 11;</code>
     */
    public int getFlags() {
      return flags_;
    }

    public static final int CONTENT_TYPE_FIELD_NUMBER = 12;
    private int contentType_;
    /**
     * <code>optional uint32 content_type = 12;</code>
     */
    public boolean hasContentType() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 content_type = 12;</code>
     */
    public int getContentType() {
      return contentType_;
    }

    private void initFields() {
      type_ = com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType.SINT;
      name_ = com.google.protobuf.ByteString.EMPTY;
      originalName_ = com.google.protobuf.ByteString.EMPTY;
      table_ = com.google.protobuf.ByteString.EMPTY;
      originalTable_ = com.google.protobuf.ByteString.EMPTY;
      schema_ = com.google.protobuf.ByteString.EMPTY;
      catalog_ = com.google.protobuf.ByteString.EMPTY;
      charset_ = "";
      fractionalDigits_ = 0;
      length_ = 0;
      flags_ = 0;
      contentType_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, originalName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, table_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, originalTable_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, schema_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, catalog_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getCharsetBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(9, fractionalDigits_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeUInt32(10, length_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, flags_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, contentType_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, name_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, originalName_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, table_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, originalTable_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, schema_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, catalog_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getCharsetBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, fractionalDigits_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, length_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, flags_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, contentType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.ColumnMetaData}
     *
     * <pre>
     * meta data of a Column
     * .. note:: the encoding used for the different ``bytes`` fields in the meta data is externally
     *   controlled.
     *   .. seealso:: https://dev.mysql.com/doc/refman/5.0/en/charset-connection.html
     * :param type:
     *   .. table:: Expected Datatype of Mysqlx.Sql.Row per SQL Type for non NULL values
     *     ================= ============ =============================== ======= ========== ====== ========
     *     SQL Type          .type        Datatype submessage             .length .frac_dig  .flags .charset
     *     ================= ============ =============================== ======= ========== ====== ========
     *     TINY              SINT         RowFieldSignedInt               x
     *     TINY UNSIGNED     UINT         RowFieldUnsignedInt             x                  x
     *     SHORT             SINT         RowFieldSignedInt               x
     *     SHORT UNSIGNED    UINT         RowFieldUnsignedInt             x                  x
     *     INT24             SINT         RowFieldSignedInt               x
     *     INT24 UNSIGNED    UINT         RowFieldUnsignedInt             x                  x
     *     INT               SINT         RowFieldSignedInt               x
     *     INT UNSIGNED      UINT         RowFieldUnsignedInt             x                  x
     *     LONGLONG          SINT         RowFieldSignedInt               x
     *     LONGLONG UNSIGNED UINT         RowFieldUnsignedInt             x                  x
     *     DOUBLE            DOUBLE       RowFieldDouble                  x       x          x
     *     FLOAT             FLOAT        RowFieldFloat                   x       x          x
     *     DECIMAL           DECIMAL      RowFieldDecimal                 x       x          x
     *     VARCHAR,CHAR,...  BYTES        RowFieldBytes                   x                  x      x
     *     GEOMETRY          BYTES        RowFieldBytes       
     *     TIME              TIME         RowFieldBytes                   x
     *     DATE              DATETIME     RowFieldBytes                   x
     *     DATETIME          DATETIME     RowFieldBytes                   x
     *     YEAR              UINT         RowFieldUnsignedInt             x                  x
     *     TIMESTAMP         DATETIME     RowFieldBytes                   x
     *     SET               SET          RowFieldBytes                                             x
     *     ENUM              ENUM         RowFieldBytes                                             x
     *     NULL              BYTES        RowFieldBytes       
     *     BIT               BIT          RowFieldUnsignedInt             x
     *     ================= ============ =============================== ======= ========== ====== ========
     *   .. note:: the SQL "NULL" value is sent as an empty field value in ``Row``
     * :param name: name of the column
     * :param original_name: name of the column before an alias was applied
     * :param table: name of the table the column orginates from
     * :param original_table: name of the table the column orginates from before an alias was applied
     * :param schema: schema the column originates from
     * :param catalog:
     *   catalog the schema originates from
     *   .. note::
     *     as there is current no support for catalogs in MySQL, don't expect this field to be set.
     *     In the MySQL C/S protocol the field had the value ``def`` all the time.
     * :param fractional_digits: displayed factional decimal digits for floating point and fixed point numbers
     * :param length: maximum count of displayable characters of .type
     * :param flags:
     *   ``.type`` specific flags
     *   ======= ====== ===========
     *   type    value  description
     *   ======= ====== ===========
     *   UINT    0x0001 zerofill
     *   DOUBLE  0x0001 unsigned
     *   FLOAT   0x0001 unsigned
     *   DECIMAL 0x0001 unsigned
     *   BYTES   0x0001 rightpad
     *   ======= ====== ===========
     *   default: 0
     * :param content_type:
     *   a hint about the higher-level encoding of a BYTES field
     *   ====== ====== ===========
     *   type   value  description
     *   ====== ====== ===========
     *   BYTES  0x0001 GEOMETRY (WKB encoding)
     *   BYTES  0x0002 JSON (text encoding)
     *   BYTES  0x0003 XML (text encoding)
     *   ====== ====== ===========
     *   .. note::
     *     this list isn't comprehensive. As guideline: the field's value is expected
     *     to pass a validator check on client and server if this field is set.
     *     If the server adds more internal datatypes that rely on BLOB storage
     *     like image manipulation, seeking into complex types in BLOBs, ... more
     *     types will be added.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.ColumnMetaData)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ColumnMetaData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ColumnMetaData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType.SINT;
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        originalName_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        table_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        originalTable_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        schema_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        catalog_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        charset_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        fractionalDigits_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        length_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        flags_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        contentType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_ColumnMetaData_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.originalName_ = originalName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.table_ = table_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.originalTable_ = originalTable_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.schema_ = schema_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.catalog_ = catalog_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.charset_ = charset_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fractionalDigits_ = fractionalDigits_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.length_ = length_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.flags_ = flags_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.contentType_ = contentType_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasOriginalName()) {
          setOriginalName(other.getOriginalName());
        }
        if (other.hasTable()) {
          setTable(other.getTable());
        }
        if (other.hasOriginalTable()) {
          setOriginalTable(other.getOriginalTable());
        }
        if (other.hasSchema()) {
          setSchema(other.getSchema());
        }
        if (other.hasCatalog()) {
          setCatalog(other.getCatalog());
        }
        if (other.hasCharset()) {
          bitField0_ |= 0x00000080;
          charset_ = other.charset_;
          onChanged();
        }
        if (other.hasFractionalDigits()) {
          setFractionalDigits(other.getFractionalDigits());
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        if (other.hasContentType()) {
          setContentType(other.getContentType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType type_ = com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType.SINT;
      /**
       * <code>required .Mysqlx.Sql.ColumnMetaData.FieldType type = 1;</code>
       *
       * <pre>
       * datatype of the field in a row
       * </pre>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .Mysqlx.Sql.ColumnMetaData.FieldType type = 1;</code>
       *
       * <pre>
       * datatype of the field in a row
       * </pre>
       */
      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType getType() {
        return type_;
      }
      /**
       * <code>required .Mysqlx.Sql.ColumnMetaData.FieldType type = 1;</code>
       *
       * <pre>
       * datatype of the field in a row
       * </pre>
       */
      public Builder setType(com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .Mysqlx.Sql.ColumnMetaData.FieldType type = 1;</code>
       *
       * <pre>
       * datatype of the field in a row
       * </pre>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.mysql.cj.mysqlx.protobuf.MysqlxSql.ColumnMetaData.FieldType.SINT;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString name_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes name = 2;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes name = 2;</code>
       */
      public com.google.protobuf.ByteString getName() {
        return name_;
      }
      /**
       * <code>optional bytes name = 2;</code>
       */
      public Builder setName(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes name = 2;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString originalName_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes original_name = 3;</code>
       */
      public boolean hasOriginalName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes original_name = 3;</code>
       */
      public com.google.protobuf.ByteString getOriginalName() {
        return originalName_;
      }
      /**
       * <code>optional bytes original_name = 3;</code>
       */
      public Builder setOriginalName(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        originalName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes original_name = 3;</code>
       */
      public Builder clearOriginalName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        originalName_ = getDefaultInstance().getOriginalName();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString table_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes table = 4;</code>
       */
      public boolean hasTable() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes table = 4;</code>
       */
      public com.google.protobuf.ByteString getTable() {
        return table_;
      }
      /**
       * <code>optional bytes table = 4;</code>
       */
      public Builder setTable(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        table_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes table = 4;</code>
       */
      public Builder clearTable() {
        bitField0_ = (bitField0_ & ~0x00000008);
        table_ = getDefaultInstance().getTable();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString originalTable_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes original_table = 5;</code>
       */
      public boolean hasOriginalTable() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes original_table = 5;</code>
       */
      public com.google.protobuf.ByteString getOriginalTable() {
        return originalTable_;
      }
      /**
       * <code>optional bytes original_table = 5;</code>
       */
      public Builder setOriginalTable(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        originalTable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes original_table = 5;</code>
       */
      public Builder clearOriginalTable() {
        bitField0_ = (bitField0_ & ~0x00000010);
        originalTable_ = getDefaultInstance().getOriginalTable();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString schema_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes schema = 6;</code>
       */
      public boolean hasSchema() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bytes schema = 6;</code>
       */
      public com.google.protobuf.ByteString getSchema() {
        return schema_;
      }
      /**
       * <code>optional bytes schema = 6;</code>
       */
      public Builder setSchema(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        schema_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes schema = 6;</code>
       */
      public Builder clearSchema() {
        bitField0_ = (bitField0_ & ~0x00000020);
        schema_ = getDefaultInstance().getSchema();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString catalog_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes catalog = 7;</code>
       */
      public boolean hasCatalog() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bytes catalog = 7;</code>
       */
      public com.google.protobuf.ByteString getCatalog() {
        return catalog_;
      }
      /**
       * <code>optional bytes catalog = 7;</code>
       */
      public Builder setCatalog(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        catalog_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes catalog = 7;</code>
       */
      public Builder clearCatalog() {
        bitField0_ = (bitField0_ & ~0x00000040);
        catalog_ = getDefaultInstance().getCatalog();
        onChanged();
        return this;
      }

      private java.lang.Object charset_ = "";
      /**
       * <code>optional string charset = 8;</code>
       */
      public boolean hasCharset() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string charset = 8;</code>
       */
      public java.lang.String getCharset() {
        java.lang.Object ref = charset_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            charset_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string charset = 8;</code>
       */
      public com.google.protobuf.ByteString
          getCharsetBytes() {
        java.lang.Object ref = charset_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          charset_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string charset = 8;</code>
       */
      public Builder setCharset(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        charset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string charset = 8;</code>
       */
      public Builder clearCharset() {
        bitField0_ = (bitField0_ & ~0x00000080);
        charset_ = getDefaultInstance().getCharset();
        onChanged();
        return this;
      }
      /**
       * <code>optional string charset = 8;</code>
       */
      public Builder setCharsetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        charset_ = value;
        onChanged();
        return this;
      }

      private int fractionalDigits_ ;
      /**
       * <code>optional uint32 fractional_digits = 9;</code>
       */
      public boolean hasFractionalDigits() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 fractional_digits = 9;</code>
       */
      public int getFractionalDigits() {
        return fractionalDigits_;
      }
      /**
       * <code>optional uint32 fractional_digits = 9;</code>
       */
      public Builder setFractionalDigits(int value) {
        bitField0_ |= 0x00000100;
        fractionalDigits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fractional_digits = 9;</code>
       */
      public Builder clearFractionalDigits() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fractionalDigits_ = 0;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <code>optional uint32 length = 10;</code>
       */
      public boolean hasLength() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 length = 10;</code>
       */
      public int getLength() {
        return length_;
      }
      /**
       * <code>optional uint32 length = 10;</code>
       */
      public Builder setLength(int value) {
        bitField0_ |= 0x00000200;
        length_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 length = 10;</code>
       */
      public Builder clearLength() {
        bitField0_ = (bitField0_ & ~0x00000200);
        length_ = 0;
        onChanged();
        return this;
      }

      private int flags_ ;
      /**
       * <code>optional uint32 flags = 11;</code>
       */
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 flags = 11;</code>
       */
      public int getFlags() {
        return flags_;
      }
      /**
       * <code>optional uint32 flags = 11;</code>
       */
      public Builder setFlags(int value) {
        bitField0_ |= 0x00000400;
        flags_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 flags = 11;</code>
       */
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00000400);
        flags_ = 0;
        onChanged();
        return this;
      }

      private int contentType_ ;
      /**
       * <code>optional uint32 content_type = 12;</code>
       */
      public boolean hasContentType() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 content_type = 12;</code>
       */
      public int getContentType() {
        return contentType_;
      }
      /**
       * <code>optional uint32 content_type = 12;</code>
       */
      public Builder setContentType(int value) {
        bitField0_ |= 0x00000800;
        contentType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 content_type = 12;</code>
       */
      public Builder clearContentType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        contentType_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.ColumnMetaData)
    }

    static {
      defaultInstance = new ColumnMetaData(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.ColumnMetaData)
  }

  public interface RowFieldSignedIntOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.RowFieldSignedInt)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required sint64 value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>required sint64 value = 1;</code>
     */
    long getValue();
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.RowFieldSignedInt}
   *
   * <pre>
   *   SINT
   *     ``.length``
   *       maximum number of displayable decimal digits (including minus sign) of the type
   *       .. note::
   *         valid range is 0-255, but usually you'll see 1-20
   *         =============== ==
   *         SQL Type        max digits per type
   *         =============== ==
   *         TINY SIGNED      4
   *         SHORT SIGNED     6
   *         INT24 SIGNED     8
   *         INT SIGNED      11
   *         LONGLONG SIGNED 20
   *         =============== ==
   *       .. seealso:: definition of ``M`` in https://dev.mysql.com/doc/refman/5.5/en/numeric-type-overview.html
   * </pre>
   */
  public static final class RowFieldSignedInt extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.RowFieldSignedInt)
      RowFieldSignedIntOrBuilder {
    // Use RowFieldSignedInt.newBuilder() to construct.
    private RowFieldSignedInt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RowFieldSignedInt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RowFieldSignedInt defaultInstance;
    public static RowFieldSignedInt getDefaultInstance() {
      return defaultInstance;
    }

    public RowFieldSignedInt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RowFieldSignedInt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              value_ = input.readSInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldSignedInt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldSignedInt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt.Builder.class);
    }

    public static com.google.protobuf.Parser<RowFieldSignedInt> PARSER =
        new com.google.protobuf.AbstractParser<RowFieldSignedInt>() {
      public RowFieldSignedInt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowFieldSignedInt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RowFieldSignedInt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private long value_;
    /**
     * <code>required sint64 value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required sint64 value = 1;</code>
     */
    public long getValue() {
      return value_;
    }

    private void initFields() {
      value_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeSInt64(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt64Size(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.RowFieldSignedInt}
     *
     * <pre>
     *   SINT
     *     ``.length``
     *       maximum number of displayable decimal digits (including minus sign) of the type
     *       .. note::
     *         valid range is 0-255, but usually you'll see 1-20
     *         =============== ==
     *         SQL Type        max digits per type
     *         =============== ==
     *         TINY SIGNED      4
     *         SHORT SIGNED     6
     *         INT24 SIGNED     8
     *         INT SIGNED      11
     *         LONGLONG SIGNED 20
     *         =============== ==
     *       .. seealso:: definition of ``M`` in https://dev.mysql.com/doc/refman/5.5/en/numeric-type-overview.html
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.RowFieldSignedInt)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedIntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldSignedInt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldSignedInt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldSignedInt_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSignedInt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long value_ ;
      /**
       * <code>required sint64 value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint64 value = 1;</code>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>required sint64 value = 1;</code>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required sint64 value = 1;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.RowFieldSignedInt)
    }

    static {
      defaultInstance = new RowFieldSignedInt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.RowFieldSignedInt)
  }

  public interface RowFieldUnsignedIntOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.RowFieldUnsignedInt)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint64 value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>required uint64 value = 1;</code>
     */
    long getValue();
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.RowFieldUnsignedInt}
   *
   * <pre>
   *   UINT
   *     ``.flags &amp; 1`` (zerofill)
   *       the client has to left pad with 0's up to .length
   *     ``.length``
   *       maximum number of displayable decimal digits of the type
   *       .. note::
   *         valid range is 0-255, but usually you'll see 1-20
   *         ================= ==
   *         SQL Type          max digits per type
   *         ================= ==
   *         TINY UNSIGNED      3
   *         SHORT UNSIGNED     5
   *         INT24 UNSIGNED     8
   *         INT UNSIGNED      10
   *         LONGLONG UNSIGNED 20
   *         ================= ==
   *       .. seealso:: definition of ``M`` in https://dev.mysql.com/doc/refman/5.5/en/numeric-type-overview.html
   *   BIT
   *     ``.length``
   *       maximum number of displayable binary digits
   *     .. note:: valid range for M of the ``BIT`` type is 1 - 64
   *     .. seealso:: https://dev.mysql.com/doc/refman/5.5/en/numeric-type-overview.html
   * </pre>
   */
  public static final class RowFieldUnsignedInt extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.RowFieldUnsignedInt)
      RowFieldUnsignedIntOrBuilder {
    // Use RowFieldUnsignedInt.newBuilder() to construct.
    private RowFieldUnsignedInt(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RowFieldUnsignedInt(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RowFieldUnsignedInt defaultInstance;
    public static RowFieldUnsignedInt getDefaultInstance() {
      return defaultInstance;
    }

    public RowFieldUnsignedInt getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RowFieldUnsignedInt(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              value_ = input.readUInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldUnsignedInt_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldUnsignedInt_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt.Builder.class);
    }

    public static com.google.protobuf.Parser<RowFieldUnsignedInt> PARSER =
        new com.google.protobuf.AbstractParser<RowFieldUnsignedInt>() {
      public RowFieldUnsignedInt parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowFieldUnsignedInt(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RowFieldUnsignedInt> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private long value_;
    /**
     * <code>required uint64 value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 value = 1;</code>
     */
    public long getValue() {
      return value_;
    }

    private void initFields() {
      value_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.RowFieldUnsignedInt}
     *
     * <pre>
     *   UINT
     *     ``.flags &amp; 1`` (zerofill)
     *       the client has to left pad with 0's up to .length
     *     ``.length``
     *       maximum number of displayable decimal digits of the type
     *       .. note::
     *         valid range is 0-255, but usually you'll see 1-20
     *         ================= ==
     *         SQL Type          max digits per type
     *         ================= ==
     *         TINY UNSIGNED      3
     *         SHORT UNSIGNED     5
     *         INT24 UNSIGNED     8
     *         INT UNSIGNED      10
     *         LONGLONG UNSIGNED 20
     *         ================= ==
     *       .. seealso:: definition of ``M`` in https://dev.mysql.com/doc/refman/5.5/en/numeric-type-overview.html
     *   BIT
     *     ``.length``
     *       maximum number of displayable binary digits
     *     .. note:: valid range for M of the ``BIT`` type is 1 - 64
     *     .. seealso:: https://dev.mysql.com/doc/refman/5.5/en/numeric-type-overview.html
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.RowFieldUnsignedInt)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedIntOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldUnsignedInt_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldUnsignedInt_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldUnsignedInt_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldUnsignedInt) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long value_ ;
      /**
       * <code>required uint64 value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 value = 1;</code>
       */
      public long getValue() {
        return value_;
      }
      /**
       * <code>required uint64 value = 1;</code>
       */
      public Builder setValue(long value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 value = 1;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.RowFieldUnsignedInt)
    }

    static {
      defaultInstance = new RowFieldUnsignedInt(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.RowFieldUnsignedInt)
  }

  public interface RowFieldDoubleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.RowFieldDouble)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required double value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>required double value = 1;</code>
     */
    double getValue();
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.RowFieldDouble}
   *
   * <pre>
   *   DOUBLE
   *     ``.length``
   *       maximum number of displayable decimal digits (including the decimal point and ``.fractional_digits``)
   *     ``.fractional_digits``
   *       maximum number of displayable decimal digits following the decimal point
   * </pre>
   */
  public static final class RowFieldDouble extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.RowFieldDouble)
      RowFieldDoubleOrBuilder {
    // Use RowFieldDouble.newBuilder() to construct.
    private RowFieldDouble(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RowFieldDouble(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RowFieldDouble defaultInstance;
    public static RowFieldDouble getDefaultInstance() {
      return defaultInstance;
    }

    public RowFieldDouble getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RowFieldDouble(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 9: {
              bitField0_ |= 0x00000001;
              value_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDouble_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDouble_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble.Builder.class);
    }

    public static com.google.protobuf.Parser<RowFieldDouble> PARSER =
        new com.google.protobuf.AbstractParser<RowFieldDouble>() {
      public RowFieldDouble parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowFieldDouble(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RowFieldDouble> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private double value_;
    /**
     * <code>required double value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required double value = 1;</code>
     */
    public double getValue() {
      return value_;
    }

    private void initFields() {
      value_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeDouble(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.RowFieldDouble}
     *
     * <pre>
     *   DOUBLE
     *     ``.length``
     *       maximum number of displayable decimal digits (including the decimal point and ``.fractional_digits``)
     *     ``.fractional_digits``
     *       maximum number of displayable decimal digits following the decimal point
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.RowFieldDouble)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDoubleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDouble_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDouble_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDouble_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDouble) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private double value_ ;
      /**
       * <code>required double value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required double value = 1;</code>
       */
      public double getValue() {
        return value_;
      }
      /**
       * <code>required double value = 1;</code>
       */
      public Builder setValue(double value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required double value = 1;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.RowFieldDouble)
    }

    static {
      defaultInstance = new RowFieldDouble(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.RowFieldDouble)
  }

  public interface RowFieldFloatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.RowFieldFloat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required float value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>required float value = 1;</code>
     */
    float getValue();
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.RowFieldFloat}
   *
   * <pre>
   *   FLOAT
   *     ``.length``
   *       maximum number of displayable decimal digits (including the decimal point and ``.fractional_digits``)
   *     ``.fractional_digits``
   *       maximum number of displayable decimal digits following the decimal point
   * </pre>
   */
  public static final class RowFieldFloat extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.RowFieldFloat)
      RowFieldFloatOrBuilder {
    // Use RowFieldFloat.newBuilder() to construct.
    private RowFieldFloat(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RowFieldFloat(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RowFieldFloat defaultInstance;
    public static RowFieldFloat getDefaultInstance() {
      return defaultInstance;
    }

    public RowFieldFloat getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RowFieldFloat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              value_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldFloat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldFloat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat.Builder.class);
    }

    public static com.google.protobuf.Parser<RowFieldFloat> PARSER =
        new com.google.protobuf.AbstractParser<RowFieldFloat>() {
      public RowFieldFloat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowFieldFloat(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RowFieldFloat> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private float value_;
    /**
     * <code>required float value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required float value = 1;</code>
     */
    public float getValue() {
      return value_;
    }

    private void initFields() {
      value_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.RowFieldFloat}
     *
     * <pre>
     *   FLOAT
     *     ``.length``
     *       maximum number of displayable decimal digits (including the decimal point and ``.fractional_digits``)
     *     ``.fractional_digits``
     *       maximum number of displayable decimal digits following the decimal point
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.RowFieldFloat)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldFloat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldFloat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldFloat_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldFloat) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private float value_ ;
      /**
       * <code>required float value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float value = 1;</code>
       */
      public float getValue() {
        return value_;
      }
      /**
       * <code>required float value = 1;</code>
       */
      public Builder setValue(float value) {
        bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float value = 1;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.RowFieldFloat)
    }

    static {
      defaultInstance = new RowFieldFloat(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.RowFieldFloat)
  }

  public interface RowFieldBytesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.RowFieldBytes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>required bytes value = 1;</code>
     */
    com.google.protobuf.ByteString getValue();
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.RowFieldBytes}
   *
   * <pre>
   *   BYTES, ENUM
   *     ``.length``
   *       the maximum length of characters of the underlying type
   *     ``.flags &amp; 1`` (rightpad)
   *       if the length of the field is less than ``.length``, the receiver is
   *       supposed to add padding characters to the right end of the string.
   *       If the ``.charset`` is "binary", the padding character is ``0x00``,
   *       otherwise it is a space character as defined by that character set.
   *     ============= ======= ======== =======
   *     SQL Type      .length .charset .flags
   *     ============= ======= ======== =======
   *     TINYBLOB      256     binary
   *     BLOB          65535   binary
   *     VARCHAR(32)   32      utf8
   *     VARBINARY(32) 32      utf8_bin
   *     BINARY(32)    32      binary   rightpad
   *     CHAR(32)      32      utf8     rightpad
   *     ============= ======= ======== =======
   *     BYTES is used for all opaque byte strings that may have a charset
   *     * TINYBLOB, BLOB, MEDIUMBLOB, LONGBLOB
   *     * TINYTEXT, TEXT, MEDIUMTEXT, LONGTEXT
   *     * VARCHAR, VARBINARY
   *     * CHAR, BINARY
   *     * ENUM
   *     The SQL Type "NULL" is send as empty string if "not-NULL".
   * </pre>
   */
  public static final class RowFieldBytes extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.RowFieldBytes)
      RowFieldBytesOrBuilder {
    // Use RowFieldBytes.newBuilder() to construct.
    private RowFieldBytes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RowFieldBytes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RowFieldBytes defaultInstance;
    public static RowFieldBytes getDefaultInstance() {
      return defaultInstance;
    }

    public RowFieldBytes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RowFieldBytes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldBytes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldBytes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes.Builder.class);
    }

    public static com.google.protobuf.Parser<RowFieldBytes> PARSER =
        new com.google.protobuf.AbstractParser<RowFieldBytes>() {
      public RowFieldBytes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowFieldBytes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RowFieldBytes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString value_;
    /**
     * <code>required bytes value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes value = 1;</code>
     */
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    private void initFields() {
      value_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.RowFieldBytes}
     *
     * <pre>
     *   BYTES, ENUM
     *     ``.length``
     *       the maximum length of characters of the underlying type
     *     ``.flags &amp; 1`` (rightpad)
     *       if the length of the field is less than ``.length``, the receiver is
     *       supposed to add padding characters to the right end of the string.
     *       If the ``.charset`` is "binary", the padding character is ``0x00``,
     *       otherwise it is a space character as defined by that character set.
     *     ============= ======= ======== =======
     *     SQL Type      .length .charset .flags
     *     ============= ======= ======== =======
     *     TINYBLOB      256     binary
     *     BLOB          65535   binary
     *     VARCHAR(32)   32      utf8
     *     VARBINARY(32) 32      utf8_bin
     *     BINARY(32)    32      binary   rightpad
     *     CHAR(32)      32      utf8     rightpad
     *     ============= ======= ======== =======
     *     BYTES is used for all opaque byte strings that may have a charset
     *     * TINYBLOB, BLOB, MEDIUMBLOB, LONGBLOB
     *     * TINYTEXT, TEXT, MEDIUMTEXT, LONGTEXT
     *     * VARCHAR, VARBINARY
     *     * CHAR, BINARY
     *     * ENUM
     *     The SQL Type "NULL" is send as empty string if "not-NULL".
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.RowFieldBytes)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldBytes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldBytes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldBytes_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldBytes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes value = 1;</code>
       */
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <code>required bytes value = 1;</code>
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes value = 1;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.RowFieldBytes)
    }

    static {
      defaultInstance = new RowFieldBytes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.RowFieldBytes)
  }

  public interface RowFieldTimeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.RowFieldTime)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getValueList();
    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    int getValueCount();
    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    long getValue(int index);
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.RowFieldTime}
   *
   * <pre>
   *   TIME
   *      A time value, possibly a time interval value.
   * </pre>
   */
  public static final class RowFieldTime extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.RowFieldTime)
      RowFieldTimeOrBuilder {
    // Use RowFieldTime.newBuilder() to construct.
    private RowFieldTime(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RowFieldTime(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RowFieldTime defaultInstance;
    public static RowFieldTime getDefaultInstance() {
      return defaultInstance;
    }

    public RowFieldTime getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RowFieldTime(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldTime_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldTime_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime.Builder.class);
    }

    public static com.google.protobuf.Parser<RowFieldTime> PARSER =
        new com.google.protobuf.AbstractParser<RowFieldTime>() {
      public RowFieldTime parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowFieldTime(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RowFieldTime> getParserForType() {
      return PARSER;
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> value_;
    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    public long getValue(int index) {
      return value_.get(index);
    }
    private int valueMemoizedSerializedSize = -1;

    private void initFields() {
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getValueList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(valueMemoizedSerializedSize);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeInt64NoTag(value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(value_.get(i));
        }
        size += dataSize;
        if (!getValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.RowFieldTime}
     *
     * <pre>
     *   TIME
     *      A time value, possibly a time interval value.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.RowFieldTime)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldTime_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldTime_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldTime_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldTime) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<java.lang.Long>(value_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public long getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public Builder setValue(
          int index, long value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public Builder addValue(long value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.RowFieldTime)
    }

    static {
      defaultInstance = new RowFieldTime(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.RowFieldTime)
  }

  public interface RowFieldDatetimeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.RowFieldDatetime)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    java.util.List<java.lang.Long> getValueList();
    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    int getValueCount();
    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    long getValue(int index);
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.RowFieldDatetime}
   *
   * <pre>
   *   DATETIME
   *      A date or date and time value.
   * </pre>
   */
  public static final class RowFieldDatetime extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.RowFieldDatetime)
      RowFieldDatetimeOrBuilder {
    // Use RowFieldDatetime.newBuilder() to construct.
    private RowFieldDatetime(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RowFieldDatetime(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RowFieldDatetime defaultInstance;
    public static RowFieldDatetime getDefaultInstance() {
      return defaultInstance;
    }

    public RowFieldDatetime getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RowFieldDatetime(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(input.readInt64());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDatetime_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDatetime_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime.Builder.class);
    }

    public static com.google.protobuf.Parser<RowFieldDatetime> PARSER =
        new com.google.protobuf.AbstractParser<RowFieldDatetime>() {
      public RowFieldDatetime parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowFieldDatetime(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RowFieldDatetime> getParserForType() {
      return PARSER;
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Long> value_;
    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    public java.util.List<java.lang.Long>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated int64 value = 1 [packed = true];</code>
     */
    public long getValue(int index) {
      return value_.get(index);
    }
    private int valueMemoizedSerializedSize = -1;

    private void initFields() {
      value_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getValueList().size() > 0) {
        output.writeRawVarint32(10);
        output.writeRawVarint32(valueMemoizedSerializedSize);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeInt64NoTag(value_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(value_.get(i));
        }
        size += dataSize;
        if (!getValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.RowFieldDatetime}
     *
     * <pre>
     *   DATETIME
     *      A date or date and time value.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.RowFieldDatetime)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetimeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDatetime_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDatetime_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDatetime_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDatetime) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Long> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<java.lang.Long>(value_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public java.util.List<java.lang.Long>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public long getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public Builder setValue(
          int index, long value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public Builder addValue(long value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 value = 1 [packed = true];</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.RowFieldDatetime)
    }

    static {
      defaultInstance = new RowFieldDatetime(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.RowFieldDatetime)
  }

  public interface RowFieldDecimalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.RowFieldDecimal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>required bytes value = 1;</code>
     */
    com.google.protobuf.ByteString getValue();
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.RowFieldDecimal}
   *
   * <pre>
   *   DECIMAL
   *     contains one arbitrary length varint: TODO update this documentation
   *     * the integral part
   *     * the fractional part
   *     The fractional part is scaled by ``.fractional_digits``::
   *       integral_part     = 123
   *       fractional_part   =   3
   *       fractional_digits =   6
   *       decimal = 126.000003
   *     ``.length``
   *       maximum number of displayable decimal digits (*excluding* the decimal point and sign, but including ``.fractional_digits``)
   *       .. note:: should be in the range of 1 - 65
   *     ``.fractional_digits``
   *       is the decimal digits to display out of length
   *       .. note:: should be in the range of 0 - 30
   * </pre>
   */
  public static final class RowFieldDecimal extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.RowFieldDecimal)
      RowFieldDecimalOrBuilder {
    // Use RowFieldDecimal.newBuilder() to construct.
    private RowFieldDecimal(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RowFieldDecimal(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RowFieldDecimal defaultInstance;
    public static RowFieldDecimal getDefaultInstance() {
      return defaultInstance;
    }

    public RowFieldDecimal getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RowFieldDecimal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDecimal_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDecimal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal.Builder.class);
    }

    public static com.google.protobuf.Parser<RowFieldDecimal> PARSER =
        new com.google.protobuf.AbstractParser<RowFieldDecimal>() {
      public RowFieldDecimal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowFieldDecimal(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RowFieldDecimal> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString value_;
    /**
     * <code>required bytes value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes value = 1;</code>
     */
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    private void initFields() {
      value_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.RowFieldDecimal}
     *
     * <pre>
     *   DECIMAL
     *     contains one arbitrary length varint: TODO update this documentation
     *     * the integral part
     *     * the fractional part
     *     The fractional part is scaled by ``.fractional_digits``::
     *       integral_part     = 123
     *       fractional_part   =   3
     *       fractional_digits =   6
     *       decimal = 126.000003
     *     ``.length``
     *       maximum number of displayable decimal digits (*excluding* the decimal point and sign, but including ``.fractional_digits``)
     *       .. note:: should be in the range of 1 - 65
     *     ``.fractional_digits``
     *       is the decimal digits to display out of length
     *       .. note:: should be in the range of 0 - 30
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.RowFieldDecimal)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDecimal_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDecimal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldDecimal_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldDecimal) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes value = 1;</code>
       */
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <code>required bytes value = 1;</code>
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes value = 1;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.RowFieldDecimal)
    }

    static {
      defaultInstance = new RowFieldDecimal(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.RowFieldDecimal)
  }

  public interface RowFieldSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Mysqlx.Sql.RowFieldSet)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bytes value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>required bytes value = 1;</code>
     */
    com.google.protobuf.ByteString getValue();
  }
  /**
   * Protobuf type {@code Mysqlx.Sql.RowFieldSet}
   *
   * <pre>
   *   SET
   *     A list of strings representing a SET of values.
   * </pre>
   */
  public static final class RowFieldSet extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Mysqlx.Sql.RowFieldSet)
      RowFieldSetOrBuilder {
    // Use RowFieldSet.newBuilder() to construct.
    private RowFieldSet(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RowFieldSet(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RowFieldSet defaultInstance;
    public static RowFieldSet getDefaultInstance() {
      return defaultInstance;
    }

    public RowFieldSet getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RowFieldSet(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              value_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldSet_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldSet_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet.Builder.class);
    }

    public static com.google.protobuf.Parser<RowFieldSet> PARSER =
        new com.google.protobuf.AbstractParser<RowFieldSet>() {
      public RowFieldSet parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RowFieldSet(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RowFieldSet> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString value_;
    /**
     * <code>required bytes value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes value = 1;</code>
     */
    public com.google.protobuf.ByteString getValue() {
      return value_;
    }

    private void initFields() {
      value_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasValue()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, value_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, value_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Mysqlx.Sql.RowFieldSet}
     *
     * <pre>
     *   SET
     *     A list of strings representing a SET of values.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Mysqlx.Sql.RowFieldSet)
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldSet_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldSet_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet.class, com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet.Builder.class);
      }

      // Construct using com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.internal_static_Mysqlx_Sql_RowFieldSet_descriptor;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet getDefaultInstanceForType() {
        return com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet.getDefaultInstance();
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet build() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet buildPartial() {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet result = new com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet) {
          return mergeFrom((com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet other) {
        if (other == com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasValue()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.mysqlx.protobuf.MysqlxSql.RowFieldSet) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>required bytes value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bytes value = 1;</code>
       */
      public com.google.protobuf.ByteString getValue() {
        return value_;
      }
      /**
       * <code>required bytes value = 1;</code>
       */
      public Builder setValue(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bytes value = 1;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Mysqlx.Sql.RowFieldSet)
    }

    static {
      defaultInstance = new RowFieldSet(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Mysqlx.Sql.RowFieldSet)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_Row_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_Row_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_StmtExecute_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_StmtExecute_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_StmtExecuteOk_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_StmtExecuteOk_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_ResultFetchDoneMoreResultsets_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_ResultFetchDoneMoreResultsets_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_ResultFetchDone_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_ResultFetchDone_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_ColumnMetaData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_ColumnMetaData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_RowFieldSignedInt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_RowFieldSignedInt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_RowFieldUnsignedInt_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_RowFieldUnsignedInt_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_RowFieldDouble_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_RowFieldDouble_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_RowFieldFloat_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_RowFieldFloat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_RowFieldBytes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_RowFieldBytes_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_RowFieldTime_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_RowFieldTime_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_RowFieldDatetime_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_RowFieldDatetime_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_RowFieldDecimal_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_RowFieldDecimal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Mysqlx_Sql_RowFieldSet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Mysqlx_Sql_RowFieldSet_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020mysqlx_sql.proto\022\nMysqlx.Sql\032\026mysqlx_d" +
      "atatypes.proto\"\024\n\003Row\022\r\n\005field\030\001 \003(\014\"y\n\013" +
      "StmtExecute\022\026\n\tnamespace\030\003 \001(\t:\003sql\022\014\n\004s" +
      "tmt\030\001 \002(\014\022#\n\004args\030\002 \003(\0132\025.Mysqlx.Datatyp" +
      "es.Any\022\037\n\020compact_metadata\030\004 \001(\010:\005false\"" +
      ">\n\rStmtExecuteOk\022\025\n\rrows_affected\030\001 \001(\004\022" +
      "\026\n\016last_insert_id\030\002 \001(\004\"\037\n\035ResultFetchDo" +
      "neMoreResultsets\"\021\n\017ResultFetchDone\"\227\003\n\016" +
      "ColumnMetaData\0222\n\004type\030\001 \002(\0162$.Mysqlx.Sq" +
      "l.ColumnMetaData.FieldType\022\014\n\004name\030\002 \001(\014",
      "\022\025\n\roriginal_name\030\003 \001(\014\022\r\n\005table\030\004 \001(\014\022\026" +
      "\n\016original_table\030\005 \001(\014\022\016\n\006schema\030\006 \001(\014\022\017" +
      "\n\007catalog\030\007 \001(\014\022\017\n\007charset\030\010 \001(\t\022\031\n\021frac" +
      "tional_digits\030\t \001(\r\022\016\n\006length\030\n \001(\r\022\r\n\005f" +
      "lags\030\013 \001(\r\022\024\n\014content_type\030\014 \001(\r\"\202\001\n\tFie" +
      "ldType\022\010\n\004SINT\020\001\022\010\n\004UINT\020\002\022\n\n\006DOUBLE\020\005\022\t" +
      "\n\005FLOAT\020\006\022\t\n\005BYTES\020\007\022\010\n\004TIME\020\n\022\014\n\010DATETI" +
      "ME\020\014\022\007\n\003SET\020\017\022\010\n\004ENUM\020\020\022\007\n\003BIT\020\021\022\013\n\007DECI" +
      "MAL\020\022\"\"\n\021RowFieldSignedInt\022\r\n\005value\030\001 \002(" +
      "\022\"$\n\023RowFieldUnsignedInt\022\r\n\005value\030\001 \002(\004\"",
      "\037\n\016RowFieldDouble\022\r\n\005value\030\001 \002(\001\"\036\n\rRowF" +
      "ieldFloat\022\r\n\005value\030\001 \002(\002\"\036\n\rRowFieldByte" +
      "s\022\r\n\005value\030\001 \002(\014\"!\n\014RowFieldTime\022\021\n\005valu" +
      "e\030\001 \003(\003B\002\020\001\"%\n\020RowFieldDatetime\022\021\n\005value" +
      "\030\001 \003(\003B\002\020\001\" \n\017RowFieldDecimal\022\r\n\005value\030\001" +
      " \002(\014\"\034\n\013RowFieldSet\022\r\n\005value\030\001 \002(\014B\036\n\034co" +
      "m.mysql.cj.mysqlx.protobuf"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.getDescriptor(),
        }, assigner);
    internal_static_Mysqlx_Sql_Row_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Mysqlx_Sql_Row_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_Row_descriptor,
        new java.lang.String[] { "Field", });
    internal_static_Mysqlx_Sql_StmtExecute_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Mysqlx_Sql_StmtExecute_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_StmtExecute_descriptor,
        new java.lang.String[] { "Namespace", "Stmt", "Args", "CompactMetadata", });
    internal_static_Mysqlx_Sql_StmtExecuteOk_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Mysqlx_Sql_StmtExecuteOk_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_StmtExecuteOk_descriptor,
        new java.lang.String[] { "RowsAffected", "LastInsertId", });
    internal_static_Mysqlx_Sql_ResultFetchDoneMoreResultsets_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_Mysqlx_Sql_ResultFetchDoneMoreResultsets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_ResultFetchDoneMoreResultsets_descriptor,
        new java.lang.String[] { });
    internal_static_Mysqlx_Sql_ResultFetchDone_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_Mysqlx_Sql_ResultFetchDone_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_ResultFetchDone_descriptor,
        new java.lang.String[] { });
    internal_static_Mysqlx_Sql_ColumnMetaData_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_Mysqlx_Sql_ColumnMetaData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_ColumnMetaData_descriptor,
        new java.lang.String[] { "Type", "Name", "OriginalName", "Table", "OriginalTable", "Schema", "Catalog", "Charset", "FractionalDigits", "Length", "Flags", "ContentType", });
    internal_static_Mysqlx_Sql_RowFieldSignedInt_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_Mysqlx_Sql_RowFieldSignedInt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_RowFieldSignedInt_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_Mysqlx_Sql_RowFieldUnsignedInt_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_Mysqlx_Sql_RowFieldUnsignedInt_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_RowFieldUnsignedInt_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_Mysqlx_Sql_RowFieldDouble_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_Mysqlx_Sql_RowFieldDouble_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_RowFieldDouble_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_Mysqlx_Sql_RowFieldFloat_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_Mysqlx_Sql_RowFieldFloat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_RowFieldFloat_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_Mysqlx_Sql_RowFieldBytes_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_Mysqlx_Sql_RowFieldBytes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_RowFieldBytes_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_Mysqlx_Sql_RowFieldTime_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_Mysqlx_Sql_RowFieldTime_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_RowFieldTime_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_Mysqlx_Sql_RowFieldDatetime_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_Mysqlx_Sql_RowFieldDatetime_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_RowFieldDatetime_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_Mysqlx_Sql_RowFieldDecimal_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_Mysqlx_Sql_RowFieldDecimal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_RowFieldDecimal_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_Mysqlx_Sql_RowFieldSet_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_Mysqlx_Sql_RowFieldSet_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Mysqlx_Sql_RowFieldSet_descriptor,
        new java.lang.String[] { "Value", });
    com.mysql.cj.mysqlx.protobuf.MysqlxDatatypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
